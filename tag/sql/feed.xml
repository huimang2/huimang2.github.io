<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://huimang2.github.io/tag/sql/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://huimang2.github.io/" rel="alternate" type="text/html" />
  <updated>2023-06-11T22:28:57+09:00</updated>
  <id>https://huimang2.github.io/tag/sql/feed.xml</id>

  
  
  

  
    <title type="html">Rubisco’s Programming Note | </title>
  

  
    <subtitle>프로그래밍 노트</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">SQL - 데이터베이스 정규화</title>
      <link href="https://huimang2.github.io/sql/normalization" rel="alternate" type="text/html" title="SQL - 데이터베이스 정규화" />
      <published>2023-03-30T22:00:00+09:00</published>
      <updated>2023-03-30T22:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/normalization</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/normalization">&lt;h1 id=&quot;정규화normalization&quot;&gt;정규화(Normalization)&lt;/h1&gt;

&lt;p&gt;데이터베이스 정규화는 관계형 데이터 모델에서 데이터의 중복을 제거하여 이상현상을 방지하고 데이터의 일관성을 유지하기 위해 테이블을 분해하는 과정입니다.&lt;/p&gt;

&lt;h2 id=&quot;제-1-정규화&quot;&gt;제 1 정규화&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;제 1 정규화&lt;/code&gt;는 테이블의 컬럼이 원자값을 가지도록 테이블을 분해하는 단계입니다.&lt;/p&gt;

&lt;p&gt;예를 들어 아래와 같은 테이블이 있다고 가정합시다.&lt;/p&gt;

&lt;h6 id=&quot;사원-취미&quot;&gt;사원 취미&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;이름&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;취미&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;프로그래밍, 천체관측, 유튜브 감상&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;해당 테이블은 취미라는 속성에 2개 이상의 값이 존재합니다. 속성값을 원자값으로 구성하기 위해 제 1 정규화를 진행합니다.&lt;/p&gt;

&lt;h6 id=&quot;사원-취미-1&quot;&gt;사원 취미&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;이름&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;취미&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;프로그래밍&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;천체관측&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;유튜브 감상&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;제-2-정규화&quot;&gt;제 2 정규화&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;제 2 정규화&lt;/code&gt;는 제 1 정규화를 진행한 테이블에 대하여 부분 함수 종속을 제거하여 완전 함수 종속을 만족하도록 테이블을 분해하는 단계입니다.&lt;/p&gt;

&lt;p&gt;완전 함수 종속이란 기본키의 부분집합이 결정자가 되어서는 안된다는 것을 의미합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 아래와 같은 테이블이 있다고 가정합시다.&lt;/p&gt;

&lt;h6 id=&quot;수강정보&quot;&gt;수강정보&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;이름&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;담당교수&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;과목&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이순신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김유신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;해당 테이블의 경우 이름과 담당교수가 기본키가 되며, 해당 기본키의 부분집합인 담당교수가 과목을 결정하게 되어 제 2 정규형을 만족시키지 못합니다.&lt;/p&gt;

&lt;h6 id=&quot;부분-함수-종속성&quot;&gt;부분 함수 종속성&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img019.png&quot; alt=&quot;img019&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 테이블을 다음과 같이 분해하게 되면 두 테이블은 완전 함수 종속성을 만족하게 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;수강정보-1&quot;&gt;수강정보&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;이름&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;담당교수&lt;/u&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이순신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김유신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;담당교수&quot;&gt;담당교수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;담당교수&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;과목&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;제-3-정규화&quot;&gt;제 3 정규화&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;제 3 정규화&lt;/code&gt;는 제 2 정규형을 만족하는 테이블에 대하여 이행 함수 종속을 제거하도록 테이블을 분해하는 단계입니다.&lt;/p&gt;

&lt;p&gt;이행 함수 종속이란 식별자가 아닌 일반 속성이 다른 일반 속성을 결정하는 상태를 말합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 아래와 같은 테이블이 있다고 가정합시다.&lt;/p&gt;

&lt;h6 id=&quot;수강정보-2&quot;&gt;수강정보&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;이름&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;과목&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;담당교수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이순신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김유신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;식별자가 아닌 과목이 등록금을 결정하는 상태이므로 이행 함수 종속을 가집니다.&lt;/p&gt;

&lt;h6 id=&quot;이행-함수-종속성&quot;&gt;이행 함수 종속성&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img020.png&quot; alt=&quot;img020&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 테이블을 다음과 같이 분해하게 되면 이행 함수 종속이 제거됩니다.&lt;/p&gt;

&lt;h6 id=&quot;수강과목&quot;&gt;수강과목&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;이름&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;과목&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이순신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김유신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;과목정보&quot;&gt;과목정보&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;과목&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;담당교수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;bcnf-정규화&quot;&gt;BCNF 정규화&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BCNF 정규화&lt;/code&gt;는 제 3 정규형을 만족하는 테이블에 대하여 모든 결정자가 후보키가 되도록 테이블을 분해하는 단계입니다.&lt;/p&gt;

&lt;p&gt;예를 들어 아래와 같은 테이블이 있다고 가정합시다.&lt;/p&gt;

&lt;h6 id=&quot;수강정보-3&quot;&gt;수강정보&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;이름&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;과목&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;담당교수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이순신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;정약용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김유신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;기본키인 이름과 과목이 담당교수를 결정하며, 담당교수가 과목을 결정합니다. 하지만 결정자인 담당교수는 후보키가 아닙니다.&lt;/p&gt;

&lt;h6 id=&quot;후보키가-아닌-결정자&quot;&gt;후보키가 아닌 결정자&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img021.png&quot; alt=&quot;img021&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 테이블은 다음과 같이 분해할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;수강정보-4&quot;&gt;수강정보&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;이름&lt;/u&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;담당교수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홍길동&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이순신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;정약용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;김유신&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;담당교수-1&quot;&gt;담당교수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;과목&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;담당교수&lt;/u&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;장영실&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수학&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;정약용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생물&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;허준&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">정규화(Normalization)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - 집합연산자 / 계층형 질의</title>
      <link href="https://huimang2.github.io/sql/set-and-hierarchical" rel="alternate" type="text/html" title="SQL - 집합연산자 / 계층형 질의" />
      <published>2023-03-29T02:00:00+09:00</published>
      <updated>2023-03-29T02:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/set-and-hierarchical</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/set-and-hierarchical">&lt;h1 id=&quot;집합연산자set-operation&quot;&gt;집합연산자(Set Operation)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;집합연산자&lt;/code&gt;는 두 개 이상의 테이블을 연결하여 하나로 결합하는 연산자 입니다. 집합연산자를 사용하기 위해서는 컬럼의 수와 타입이 동일해야 합니다.&lt;/p&gt;

&lt;p&gt;집합연산자에는 다음과 같은 유형이 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;집합연산자-유형&quot;&gt;집합연산자 유형&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;유형&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;UNION&lt;/td&gt;
      &lt;td&gt;합집합 연산을 수행하며, 중복을 제거하여 결과를 표시합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UNION ALL&lt;/td&gt;
      &lt;td&gt;합집합 연산을 수행하며, 중복을 포함하여 결과를 표시합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INTERSECT&lt;/td&gt;
      &lt;td&gt;교집합 연산을 수행합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MINUS&lt;/td&gt;
      &lt;td&gt;차집합 연산을 수행합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;기본 구조는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;집합연산자-기본-구조&quot;&gt;집합연산자 기본 구조&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTERSECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MINUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;union&quot;&gt;UNION&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UNION&lt;/code&gt;은 합집합 연산을 수행하며, 중복된 행은 하나로 표시합니다. 내부적으로 중복된 값을 제거하는 과정에서 SORT 기능이 동작합니다.&lt;/p&gt;

&lt;p&gt;아래와 같은 예제 데이터가 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;employees_1&quot;&gt;EMPLOYEES_1&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Charlie&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;David&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;employees_2&quot;&gt;EMPLOYEES_2&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;David&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fiona&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;두 테이블의 결과에 대하여 중복을 제거하여 합쳐 출력하기 위해서는 다음과 같은 쿼리문을 작성하면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;union-예제&quot;&gt;UNION 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;union-결과&quot;&gt;UNION 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Charlie&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;David&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fiona&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;union-all&quot;&gt;UNION ALL&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt;은 합집합 연산을 수행하며, 중복된 행을 그대로 표시합니다. UNION과 달리 데이터의 중복을 제거하거나 정렬 과정을 거치지 않기 때문에 성능상 UNION보다 유리합니다.&lt;/p&gt;

&lt;h6 id=&quot;union-all-예제&quot;&gt;UNION ALL 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;union-all-결과&quot;&gt;UNION ALL 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Charlie&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;David&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;David&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fiona&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;intersect&quot;&gt;INTERSECT&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INTERSECT&lt;/code&gt;는 교집합 연산을 수행하며, 중복된 행은 제거하여 출력합니다.&lt;/p&gt;

&lt;h6 id=&quot;intersect-예제&quot;&gt;INTERSECT 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INTERSECT&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;intersect-결과&quot;&gt;INTERSECT 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Charlie&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;minus&quot;&gt;MINUS&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINUS&lt;/code&gt;는 차집합 연산을 수행하며, 중복된 행은 제거하여 출력합니다. SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EXCEPT&lt;/code&gt;를 사용합니다.&lt;/p&gt;

&lt;h6 id=&quot;minus-예제&quot;&gt;MINUS 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MINUS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;minus-결과&quot;&gt;MINUS 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;David&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;MINUS는 다음과 같이 NOT EXISTS나 NOT IN 서브쿼리를 통해서도 출력할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;not-exists를-사용한-차집합-예제&quot;&gt;NOT EXISTS를 사용한 차집합 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;not-in을-사용한-차집합-예제&quot;&gt;NOT IN을 사용한 차집합 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_1&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;계층형-질의hierarchical-query&quot;&gt;계층형 질의(Hierarchical Query)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;계층형 질의&lt;/code&gt;는 동일한 테이블에 대하여 상위와 하위 포함 관계를 가진 계층형 데이터를 계층형 구조로 조회하기 위한 질의어 입니다.&lt;/p&gt;

&lt;p&gt;기본 구조는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;계층형-질의-기본-구조&quot;&gt;계층형 질의 기본 구조&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건문&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건문&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CONNECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOCYCLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건문&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SIBLINGS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;START WITH&lt;/code&gt; 키워드에서는 계층 구조의 시작(ROOT)를 지정하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CONNECT BY&lt;/code&gt; 키워드에서는 자식 노드의 조건을 설정합니다. 이때 PRIOR 키워드를 사용하는데, 해당 키워드의 위치에 따라 순방향 계층형 질의 또는 역방향 계층형 질의를 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;조건문 앞에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOCYCLE&lt;/code&gt; 키워드를 붙인다면 순환 데이터를 조회하지 않게 됩니다. 즉, 그래프 구조가 아닌 트리형 구조로 데이터를 조회할 수 있습니다.&lt;/p&gt;

&lt;p&gt;같은 레벨인 형제 노드 간 정렬을 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORER SIBLINGS BY&lt;/code&gt; 키워드를 사용합니다.&lt;/p&gt;

&lt;p&gt;계층형 질의문에서는 다음과 같은 가상 컬럼을 사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;계층형-질의문-가상-컬럼&quot;&gt;계층형 질의문 가상 컬럼&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;가상 컬럼&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LEVEL&lt;/td&gt;
      &lt;td&gt;루트 데이터를 1로 하며, 리프 데이터까지 1씩 증가합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CONNECT_BY_ISLEAF&lt;/td&gt;
      &lt;td&gt;리프 데이터이면 1, 아니면 0을 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CONNECT_BY_ISCYCLE&lt;/td&gt;
      &lt;td&gt;사이클이 존재하면 1, 아니면 0을 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;다음과 같은 함수도 사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;계층형-질의문-함수&quot;&gt;계층형 질의문 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SYS_CONNECT_BY_PATH&lt;/td&gt;
      &lt;td&gt;루트 데이터부터 현재 데이터까지의 경로를 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CONNECT_BY_ROOT&lt;/td&gt;
      &lt;td&gt;현재 데이터의 루트 데이터를 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;예를 들어 아래와 같은 예제 데이터가 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;employees&quot;&gt;EMPLOYEES&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MANAGER_ID&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Adam&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jason&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alex&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chris&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;MANAGER_ID를 상위노드로 하는 트리구조를 다음 그림과 같이 나타낼 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;트리구조&quot;&gt;트리구조&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img018.png&quot; alt=&quot;img018&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 데이터를 계층형 질의문으로 출력해보겠습니다.&lt;/p&gt;

&lt;h6 id=&quot;계층형-질의문-예제&quot;&gt;계층형 질의문 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_ID&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_NAME&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MANAGER_ID&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEVEL&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONNECT_BY_ISLEAF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IS_LEAF&lt;/span&gt;
  	 &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYS_CONNECT_BY_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEES_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PATH&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONNECT_BY_ROOT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEES_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROOT&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MANAGER_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;CONNECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCYCLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIOR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MANAGER_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MANAGER_ID가 NULL인 데이터가 루트 노드가 되고, EMPLOYEES_ID의 상위 데이터가 MANAGER_ID인 트리 구조를 DFS로 탐색합니다.
해당 트리는 순방향으로 진행됩니다. 결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;계층형-질의문-결과&quot;&gt;계층형 질의문 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEES_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEES_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MANAGER_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LEVEL&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;IS_LEAF&lt;/th&gt;
      &lt;th&gt;PATH&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ROOT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td&gt;/John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Adam&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td&gt;/John/Adam&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td&gt;/John/Adam/Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alex&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td&gt;/John/Adam/Sarah/Alex&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chris&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td&gt;/John/Adam/Sarah/Chris&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td&gt;/John/Adam/Tom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td&gt;/John/Emily&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jason&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td&gt;/John/Emily/Jason&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;해당 계층형 질의문은 다음과 같이 셀프조인을 통해 나타낼 수도 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;셀프-조인-예제&quot;&gt;셀프 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEES_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	   &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEES_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	   &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MANAGER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	   &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEES_NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MANAGER_NAME&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEES_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MANAGER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;셀프-조인-결과&quot;&gt;셀프 조인 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEES_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEES_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MANAGER_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MANAGER_NAME&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Adam&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Adam&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Adam&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jason&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chris&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alex&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">집합연산자(Set Operation)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - 조인(JOIN)</title>
      <link href="https://huimang2.github.io/sql/join" rel="alternate" type="text/html" title="SQL - 조인(JOIN)" />
      <published>2023-03-22T22:00:00+09:00</published>
      <updated>2023-03-22T22:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/join</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/join">&lt;h1 id=&quot;조인join&quot;&gt;조인(JOIN)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;조인&lt;/code&gt;은 데이터베이스에서 두 개 이상의 테이블을 관련된 컬럼을 기반으로 결합하여 하나의 테이블로 합치는 메커니즘을 의미합니다.&lt;/p&gt;

&lt;p&gt;일반적으로 행들은 기본키(PK)와 외래키(FK)의 연관관계에 의해 조인이 성립됩니다. 하지만 PK, FK의 관계가 없더라도 논리적인 값들의 연관관계만으로도 조인이 성립할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;동등-조인equi-join&quot;&gt;동등 조인(Equi Join)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동등 조인&lt;/code&gt;은 일반적으로 “조인 키”라고 하는 일치하는 열을 기반으로 두 테이블을 결합하는 조인 작업 유형입니다.&lt;/p&gt;

&lt;p&gt;특히 동등 조인은 조인 키가 정확히 일치하는 두 테이블의 행만 반환합니다. 즉, 조인 키 값이 두 테이블에서 동일한 두 테이블의 모든 열을 포함하는 새 테이블을 생성합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 “ORDERS”와 “EMPLOYEES”라는 두 개의 테이블이 있다고 가정합니다. 각 주문에는 “EMPLOYEES” 테이블의 직원에 해당하는 EMPLOYEE_ID가 있습니다. 모든 주문 및 관련 고객 정보를 찾으려면 두 테이블의 EMPLOYEE_ID 컬럼에서 동등 조인을 수행하면 됩니다.&lt;/p&gt;

&lt;p&gt;아래는 예제 데이터 입니다.&lt;/p&gt;

&lt;h6 id=&quot;employees&quot;&gt;EMPLOYEES&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;orders&quot;&gt;ORDERS&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1001&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1002&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1003&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1004&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;두 테이블 모두에 존재하는 EMPLOYEE_ID 컬럼을 통해 동등 조인을 수행할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;동등-조인-예제&quot;&gt;동등 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;동등-조인-결과&quot;&gt;동등 조인 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1001&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1002&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1003&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1004&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;비동등-조인non-equi-join&quot;&gt;비동등 조인(Non Equi Join)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;비동등 조인&lt;/code&gt;은 조인 조건이 같지 않은 비교 연산자를 기반으로 하는 SQL의 조인 유형입니다. 동등 연산자(=)가 아닌 다른 연산자를 사용하여 조인을 수행합니다.&lt;/p&gt;

&lt;p&gt;대부분 비동등 조인을 수행할 수 있지만, 설계상의 이유로 수행이 불가능할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;아래는 예제 데이터 입니다.&lt;/p&gt;

&lt;h6 id=&quot;customers&quot;&gt;CUSTOMERS&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;CUSTOMER_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;450000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;150000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;600000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;grade&quot;&gt;GRADE&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;GRADE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LOW&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;HIGH&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;199999&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;299999&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;399999&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;499999&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;599999&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;600000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;699999&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;고객의 총 구매액에 대하여 등급을 구하고 싶다면 다음과 같은 비동등 조인 쿼리를 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;비동등-조인-예제&quot;&gt;비동등 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUSTOMERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;CUSTOMERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;GRADE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GRADE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUSTOMERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GRADE&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUSTOMERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GRADE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GRADE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;비동등-조인-결과&quot;&gt;비동등 조인 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;GRADE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;450000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;150000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;600000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;표준-조인&quot;&gt;표준 조인&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;표준 조인&lt;/code&gt;은 ANSI/ISO 표준에서 규정한 조인입니다.&lt;/p&gt;

&lt;p&gt;표준 조인에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;내부 조인(Inner Join)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;외부 조인(Outer Join)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;크로스 조인(Cross Join)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;자연 조인(Natural Join)&lt;/code&gt;이 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;내부-조인inner-join&quot;&gt;내부 조인(Inner Join)&lt;/h2&gt;

&lt;p&gt;내부 조인은 조인 조건에서 동일한 값이 있는 행만 반환하는 조인입니다.&lt;/p&gt;

&lt;h6 id=&quot;내부-조인-문법&quot;&gt;내부 조인 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건절&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같은 예제 데이터가 있다고 가정합시다.&lt;/p&gt;

&lt;h6 id=&quot;employees-1&quot;&gt;EMPLOYEES&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;orders-1&quot;&gt;ORDERS&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1001&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1002&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1003&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1004&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;EMPLOYEES 테이블에 있는 직원 중 주문 이력이 있는 직원을 확인하고 싶다면 다음과 같이 쿼리를 작성하면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;내부-조인-예제&quot;&gt;내부 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;내부-조인-결과&quot;&gt;내부 조인 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;오라클의 경우 다음과 같이 내부 조인 쿼리를 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;오라클-내부-조인-예제&quot;&gt;오라클 내부 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;외부-조인outer-join&quot;&gt;외부 조인(Outer Join)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;외부 조인&lt;/code&gt;은 조인 조건에서 동일한 값이 없더라도 행을 반환하는 조인입니다.&lt;/p&gt;

&lt;p&gt;외부 조인은 왼쪽 테이블을 기준으로 외부 조인을 수행하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Left Outer Join&lt;/code&gt;, 오른쪽 테이블을 기준으로 외부 조인을 수행하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Right Outer Join&lt;/code&gt;, 양쪽 테이블을 기준으로 외부 조인을 수행하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Full Outer Join&lt;/code&gt;이 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;left-outer-join&quot;&gt;Left Outer Join&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Left Outer Join&lt;/code&gt;은 왼쪽 테이블을 기준으로 외부 조인을 수행합니다.&lt;/p&gt;

&lt;h6 id=&quot;left-outer-join-예제&quot;&gt;Left Outer Join 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;left-outer-join-결과&quot;&gt;Left Outer Join 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;오라클의 경우 다음과 같이 Left Outer Join 쿼리를 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;오라클-left-outer-join-예제&quot;&gt;오라클 Left Outer Join 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;right-outer-join&quot;&gt;Right Outer Join&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Right Outer Join&lt;/code&gt;은 오른쪽 테이블을 기준으로 외부 조인을 수행합니다.&lt;/p&gt;

&lt;h6 id=&quot;right-outer-join-예제&quot;&gt;Right Outer Join 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;right-outer-join-결과&quot;&gt;Right Outer Join 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;오라클의 경우 다음과 같이 Left Outer Join 쿼리를 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;오라클-right-outer-join-예제&quot;&gt;오라클 Right Outer Join 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;full-outer-join&quot;&gt;Full Outer Join&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Full Outer Join&lt;/code&gt;은 오른쪽 테이블을 기준으로 외부 조인을 수행합니다.&lt;/p&gt;

&lt;h6 id=&quot;full-outer-join-예제&quot;&gt;Full Outer Join 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;full-outer-join-결과&quot;&gt;Full Outer Join 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;오라클의 경우 Full Outer Join 문법이 없습니다.&lt;/p&gt;

&lt;h2 id=&quot;크로스-조인cross-join&quot;&gt;크로스 조인(Cross Join)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;크로스 조인&lt;/code&gt;은 조인 조건 없이 모든 데이터의 조합을 나타내는 조인입니다.&lt;/p&gt;

&lt;h6 id=&quot;크로스-조인-문법&quot;&gt;크로스 조인 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;크로스-조인-예제&quot;&gt;크로스 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;크로스-조인-결과&quot;&gt;크로스 조인 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sarah&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lee&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;자연-조인natural-join&quot;&gt;자연 조인(Natural Join)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;자연 조인&lt;/code&gt;은 서로 다른 테이블에서 동일한 이름을 갖는 컬럼에 대하여 자동으로 동등 조인을 수행합니다.&lt;/p&gt;

&lt;h6 id=&quot;자연-조인-문법&quot;&gt;자연 조인 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;NATURAL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;자연-조인-예제&quot;&gt;자연 조인 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;NATURAL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;EMPLOYEES 테이블과 ORDERS 테이블에서 동일한 이름을 가지는 EMPLOYEE_ID 컬럼은 별명(Alias)를 주지 않았습니다. 이때 Natural Join을 사용하면 EMPLOYEE_ID 컬럼을 기준으로 내부 조인을 수행하게 됩니다.&lt;/p&gt;

&lt;p&gt;결과는 다음과 같이 내부 조인의 결과와 같음을 확인할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;자연-조인-결과&quot;&gt;자연 조인 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;EMPLOYEE_ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ORDER_DATE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Doe&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-01-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;John&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2023-02-01&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;내부 조인에서도 ON 조건절 대신에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USING&lt;/code&gt; 조건절을 사용한다면 자연 조인처럼 별명(Alias) 없이 컬럼을 지정할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;using-조건절-예제&quot;&gt;USING 조건절 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIRST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;TO_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YYYY-MM-DD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_DATE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;USING&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">조인(JOIN)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - 내장 함수(Built-in Function)</title>
      <link href="https://huimang2.github.io/sql/built-in-function" rel="alternate" type="text/html" title="SQL - 내장 함수(Built-in Function)" />
      <published>2023-03-07T23:00:00+09:00</published>
      <updated>2023-03-07T23:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/built-in-function</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/built-in-function">&lt;h1 id=&quot;함수function&quot;&gt;함수(Function)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;함수(Function)&lt;/code&gt;는 데이터베이스에서 입력값을 처리하여 결과값을 반환하는 프로그램으로, 크게 밴더에서 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;내장 함수(Built-in Function)&lt;/code&gt;와 사용자가 작성하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;사용자 정의 함수(User Defined Function)&lt;/code&gt;로 나눌 수 있습니다.&lt;/p&gt;

&lt;p&gt;이번 시간에는 내장 함수를 알아보고자 합니다. 내장 함수는 단일 행 값을 입력하여 단일 값을 반환하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;단일 행 함수(Single-Row Function)&lt;/code&gt;, 다중 행 값을 입력하여 단일 값을 반환하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;다중 행 함수(Multi-Row Function)&lt;/code&gt;으로 나눌 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;단일-행-함수&quot;&gt;단일 행 함수&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;단일 행 함수&lt;/code&gt;의 유형은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;문자형 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;숫자형 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;날짜형 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;형 변환 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL 관련 함수&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;문자형-함수&quot;&gt;문자형 함수&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;문자형 함수&lt;/code&gt;는 문자 또는 문자열을 입력받아 처리하는 함수로, SELECT, WHERE, ORDER BY절에서 사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;문자형-함수-1&quot;&gt;문자형 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LOWER(문자열)&lt;/td&gt;
      &lt;td&gt;문자열을 소문자로 변환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UPPER(문자열)&lt;/td&gt;
      &lt;td&gt;문자열을 대문자로 변환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INITCAP(문자열)&lt;/td&gt;
      &lt;td&gt;문자열의 첫 문자를 대문자로 변환합니다. (Pascal Case)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ASCII(문자)&lt;/td&gt;
      &lt;td&gt;문자를 아스키 코드로 변환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CHR(아스키 코드)&lt;/td&gt;
      &lt;td&gt;아스키 코드를 문자로 변환합니다. SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHAR()&lt;/code&gt;를 사용합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CONCAT(문자열1, 문자열2)&lt;/td&gt;
      &lt;td&gt;문자열1과 문자열2를 연결합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'문자열1'                                                                                                                                                           |  | '문자열2'&lt;/code&gt;와 같습니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SUBSTR(문자열, 시작위치[, 길이])&lt;/td&gt;
      &lt;td&gt;문자열의 시작위치에서 길이만큼 반환하며, 길이를 생략하면 마지막 문자열까지 반환합니다.&lt;br /&gt;시작위치를 음수로 입력하면 오른쪽 방향으로 계산하여 출력되며, SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUBSTRING()&lt;/code&gt;을 사용합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LENGTH(문자열)&lt;/td&gt;
      &lt;td&gt;문자열의 길이를 출력합니다. 바이트를 반환하려면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LENGTHB()&lt;/code&gt;를 사용하며, SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LEN()&lt;/code&gt;을 사용합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LTRIM(문자열[, 지정문자])&lt;/td&gt;
      &lt;td&gt;문자열의 왼쪽에서 연속되는 지정문자를 제거하며, 지정문자가 생략되면 공백을 제거합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RTRIM(문자열[, 지정문자])&lt;/td&gt;
      &lt;td&gt;문자열의 오른쪽에서 연속되는 지정문자를 제거하며, 지정문자가 생략되면 공백을 제거합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TRIM([LEADING | TRAILING | BOTH]&lt;br /&gt;[지정문자 FROM] 문자열)&lt;/td&gt;
      &lt;td&gt;문자열의 머릿말, 꼬릿말 또는 양쪽에서 지정문자를 제거하며, 지정문자를 생략하면 공백을 제거합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LPAD(문자열, 길이[, 채움문자])&lt;/td&gt;
      &lt;td&gt;길이만큼 문자열의 왼쪽에 채움문자를 채우며, 채움문자를 생략하면 공백을 채웁니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RPAD(문자열, 길이[, 채움문자])&lt;/td&gt;
      &lt;td&gt;길이만큼 문자열의 오른쪽에 채움문자를 채우며, 채움문자를 생략하면 공백을 채웁니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;REPLACE(문자열, 지정문자열, 변환문자열)&lt;/td&gt;
      &lt;td&gt;문자열에서 지정문자열을 변환문자열로 변경합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TRANSLATE(문자열, 지정문자열, 변환문자열)&lt;/td&gt;
      &lt;td&gt;REPLACE와 유사하며, 지정문자열의 한글자씩 변환문자열에 매핑하여 문자열을 변경합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;숫자형-함수&quot;&gt;숫자형 함수&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;숫자형 함수&lt;/code&gt;는 수치형 데이터를 입력받아 처리하는 함수입니다.&lt;/p&gt;

&lt;h6 id=&quot;숫자형-함수-1&quot;&gt;숫자형 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ABS(숫자)&lt;/td&gt;
      &lt;td&gt;숫자의 절대값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SIGN(숫자)&lt;/td&gt;
      &lt;td&gt;숫자가 양수이면 1, 음수이면 -1, 0이면 0을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MOD(숫자1, 숫자2)&lt;/td&gt;
      &lt;td&gt;숫자1을 숫자2로 나눈 나머지를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CEIL(숫자)&lt;/td&gt;
      &lt;td&gt;숫자의 올림값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FLOOR(숫자)&lt;/td&gt;
      &lt;td&gt;숫자의 내림값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ROUND(숫자[, 소수점자리수])&lt;/td&gt;
      &lt;td&gt;숫자를 소수점 자릿수에서 반올림합니다.&lt;br /&gt;소수점자리수를 생략하면 기본값으로 0이 적용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TRUNC(숫자[, 소수점자리수])&lt;/td&gt;
      &lt;td&gt;숫자의 소수점 자릿수 뒷자리를 버립니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;날짜형-함수&quot;&gt;날짜형 함수&lt;/h3&gt;

&lt;p&gt;날짜형 함수는 DATE 타입의 데이터를 계산합니다.&lt;/p&gt;

&lt;h6 id=&quot;날짜형-함수-1&quot;&gt;날짜형 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SYSDATE&lt;/td&gt;
      &lt;td&gt;현재 날짜와 시간을 반환합니다. SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GETDATE()&lt;/code&gt;를 사용합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;EXTRACT&lt;br /&gt;(YEAR | MONTH | DAY FROM 날짜)&lt;/td&gt;
      &lt;td&gt;날짜에서 년(YEAR), 월(MONTH), 일(DAY)을 추출합니다.&lt;br /&gt;SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATEPART()&lt;/code&gt;를 사용합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;형-변환-함수&quot;&gt;형 변환 함수&lt;/h3&gt;

&lt;p&gt;형 변환 함수는 데이터 타입을 변환하기 위해 사용하는 함수입니다.&lt;/p&gt;

&lt;h6 id=&quot;형-변환-함수-1&quot;&gt;형 변환 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TO_NUMBER(문자열)&lt;/td&gt;
      &lt;td&gt;문자열을 숫자로 변환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TO_CHAR(숫자 | 날짜[, 포맷])&lt;/td&gt;
      &lt;td&gt;숫자 또는 날짜를 포맷에 맞는 문자열로 변환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TO_DATE(문자열[, 포맷])&lt;/td&gt;
      &lt;td&gt;문자열을 포맷에 맞는 날짜 타입으로 변환합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;null-관련-함수&quot;&gt;NULL 관련 함수&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL 관련 함수&lt;/code&gt;눈 정해지지 않은 값을 의미하며,  과 관련된 함수는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;null-관련-함수-1&quot;&gt;NULL 관련 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;NVL(표현식1, 표현식2)&lt;/td&gt;
      &lt;td&gt;표현식1이 NULL이면 표현식2를 반환합니다.&lt;br /&gt;SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISNULL()&lt;/code&gt;을 사용합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NVL2(표현식1, 표현식2, 표현식3)&lt;/td&gt;
      &lt;td&gt;표현식1이 NULL이 아니면 표현식2를, NULL이면 표현식3을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IFNULL(표현식1, 표현식2)&lt;/td&gt;
      &lt;td&gt;표현식1과 표현식2가 같으면 NULL을, 같지않으면 표현식1을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COALESE(표현식1, 표현식2, …)&lt;/td&gt;
      &lt;td&gt;표현식 중 NULL이 아닌 첫번째 값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;다중-행-함수&quot;&gt;다중 행 함수&lt;/h2&gt;

&lt;p&gt;다중 행 함수의 유형은 집계 함수, 그룹 함수, 윈도우 함수가 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;집계-함수&quot;&gt;집계 함수&lt;/h3&gt;

&lt;p&gt;집계 함수는 특정 컬럼에 대한 행들의 값을 통계적으로 계산한 결과를 반환하는 함수입니다. SELECT절, HAVING절, GROUP BY절에 사용할 수 있으며,  값은 제외하고 계산됩니다.&lt;/p&gt;

&lt;h6 id=&quot;집계-함수-1&quot;&gt;집계 함수&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT(*)&lt;/td&gt;
      &lt;td&gt;값을 포함한 컬럼 전체 행의 수를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;값을 제외한 컬럼이나 표현식에 해당하는 행의 수를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SUM(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;컬럼이나 표현식에 해당하는 값의 합계를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AVG(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;컬럼이나 표현식에 해당하는 값의 평균을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAX(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;컬럼이나 표현식에 해당하는 값 중 최대값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIN(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;컬럼이나 표현식에 해당하는 값 중 최소값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;STDDEV(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;컬럼이나 표현식에 해당하는 값들의 표준편차를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;VARIANCE(컬럼 | 표현식)&lt;/td&gt;
      &lt;td&gt;컬럼이나 표현식에 해당하는 값들의 분산을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;그룹-함수&quot;&gt;그룹 함수&lt;/h3&gt;

&lt;p&gt;그룹 함수는 데이터를 그룹화하고 각 그룹 내의 데이터를 분석하는 데 사용되는 함수입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 문에서 사용되며 일반적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt; 구문과 함께 사용됩니다.&lt;/p&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;1-rollup-함수&quot;&gt;(1) ROLLUP 함수&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROLLUP&lt;/code&gt; 함수는 지정된 컬럼의 소계 및 총계를 구하기 위해 사용하는 그룹 함수입니다. 각 열을 기준으로 데이터를 그룹화하고, 각 그룹에 대해 집계 연산을 수행한 다음, 상위 수준에서도 그룹화 및 집계를 수행합니다.&lt;/p&gt;

&lt;h6 id=&quot;rollup-함수-구문&quot;&gt;ROLLUP 함수 구문&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집계&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;함수&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLUP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 그룹함수는 다음과 같은 행의 합집합과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;rollup-함수를-합집합으로-표현&quot;&gt;ROLLUP 함수를 합집합으로 표현&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLUP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;전체&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집합&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;예를 들어, 다음과 같은 데이터가 있다고 가정해 봅시다.&lt;/p&gt;

&lt;h6 id=&quot;rollup-함수-예제-데이터&quot;&gt;ROLLUP 함수 예제 데이터&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;지역&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;부서&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;금액&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2500&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위의 데이터에서, 이름, 성별, 국가별 판매량을 계산하고 싶다고 가정해 봅시다. 이를 수행하기 위해 ROLLUP 함수를 사용할 수 있습니다. 다음 SQL 문은 이름, 성별, 국가를 기준으로 판매량을 계산하고, ROLLUP 함수를 사용하여 계층 구조를 만듭니다.&lt;/p&gt;

&lt;h6 id=&quot;rollup-함수-예제&quot;&gt;ROLLUP 함수 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지역&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부서&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;금액&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLUP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;지역&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부서&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 구문을 사용하여, 지역별 금액 합계, 부서별 금액 합계, 전체 금액 합계를 각각 계산할 수 있습니다.&lt;/p&gt;

&lt;p&gt;아래는 위의 SQL 문의 결과입니다.&lt;/p&gt;

&lt;h6 id=&quot;rollup-함수-예제-결과&quot;&gt;ROLLUP 함수 예제 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;지역&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;부서&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUM(금액)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;2-cube-함수&quot;&gt;(2) CUBE 함수&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CUBE&lt;/code&gt; 함수는 다차원 그룹화를 수행하기 위한 기능입니다. ROLLUP 함수와 마찬가지로 GROUP BY 절에 사용되며, 여러 열을 기준으로 데이터를 그룹화하고 각 그룹 단위의 합계를 계산합니다. 하지만, ROLLUP 함수와 달리 CUBE 함수는 모든 가능한 조합에 대한 그룹 단위의 합계를 계산합니다.&lt;/p&gt;

&lt;p&gt;CUBE 함수는 내부적으로 대상 컬럼의 순서를 변경하여 쿼리를 수행하기 때문에 다른 그룹 함수보다 시스템에 대한 부하가 크므로 사용시 주의해야 합니다.&lt;/p&gt;

&lt;p&gt;CUBE 함수 구문은 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;cube-함수-구문&quot;&gt;CUBE 함수 구문&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집계&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;함수&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CUBE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 그룹함수는 다음과 같은 행의 합집합과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;cube-함수를-합집합으로-표현&quot;&gt;CUBE 함수를 합집합으로 표현&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CUBE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;전체&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집합&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;예를 들어, 다음과 같은 데이터가 있다고 가정해 봅시다.&lt;/p&gt;

&lt;h6 id=&quot;cube-함수-예제-데이터&quot;&gt;CUBE 함수 예제 데이터&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;날짜&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;지역&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;부서&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;금액&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2400&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위의 데이터에서, 날짜, 지역, 부서별로 금액의 합계를 계산하려면 다음과 같은 SQL 문을 사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;cube-함수-예제&quot;&gt;CUBE 함수 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;날짜&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지역&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부서&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;금액&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CUBE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;날짜&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지역&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부서&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 구문을 사용하여, 지역별 금액 합계, 부서별 금액 합계, 전체 금액 합계를 각각 계산할 수 있습니다.&lt;/p&gt;

&lt;p&gt;아래는 위의 SQL 문의 결과입니다.&lt;/p&gt;

&lt;h6 id=&quot;cube-함수-결과&quot;&gt;CUBE 함수 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;날짜&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;지역&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;부서&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUM(금액)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8700&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4900&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;3-grouping-sets-함수&quot;&gt;(3) GROUPING SETS 함수&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GROUPING SETS&lt;/code&gt; 함수는 다중 그룹화를 수행하기 위한 기능입니다. ROLLUP 함수 및 CUBE 함수와 비슷하지만, GROUPING SETS 함수는 그룹화에 대한 집합을 명시적으로 지정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;GROUPING SETS 함수는 GROUP BY 절에 사용되며, 다중 열을 기준으로 데이터를 그룹화하고 각 그룹 단위의 합계를 계산합니다.&lt;/p&gt;

&lt;p&gt;ROLLUP 함수나 CUBE 함수처럼 모든 가능한 조합을 계산하지 않고, 사용자가 지정한 그룹의 소계만 계산합니다. 또한 ROLLUP 함수와 달리 컬럼 간 순서와 무관한 결과를 얻을 수 있습니다.&lt;/p&gt;

&lt;p&gt;GROUPING SETS 함수의 구문은 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;grouping-sets-함수-구문&quot;&gt;GROUPING SETS 함수 구문&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집계&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;함수&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUPING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 그룹함수는 다음과 같은 행의 합집합과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;grouping-sets-함수를-합집합으로-표현&quot;&gt;GROUPING SETS 함수를 합집합으로 표현&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUPING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;예를 들어, 다음과 같은 데이터가 있다고 가정해 봅시다.&lt;/p&gt;

&lt;h6 id=&quot;grouping-sets-함수-예제-데이터&quot;&gt;GROUPING SETS 함수 예제 데이터&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;날짜&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;지역&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;부서&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;금액&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2400&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위의 데이터에서, 날짜, 지역, 부서별로 금액의 합계를 계산하려면 다음과 같은 SQL 문을 사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;grouping-sets-함수-예제&quot;&gt;GROUPING SETS 함수 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;날짜&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지역&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부서&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;금액&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUPING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;날짜&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;지역&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;부서&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 SQL 문에서, GROUPING SETS 구문은 그룹화에 대한 집합을 명시적으로 지정합니다. GROUPING SETS 구문 안에는 그룹화에 사용할 열을 나열하며, 각각을 괄호로 묶어서 집합으로 표시합니다.&lt;/p&gt;

&lt;p&gt;아래는 위의 SQL 문의 결과입니다.&lt;/p&gt;

&lt;h6 id=&quot;grouping-sets-함수-결과&quot;&gt;GROUPING SETS 함수 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;날짜&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;지역&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;부서&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUM(금액)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;서울&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;부산&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마케팅&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영업&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8700&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;윈도우-함수&quot;&gt;윈도우 함수&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;윈도우 함수(Window Function)&lt;/code&gt;는 OVER 절을 사용하여 데이터 집합을 기반으로 계산되는 함수입니다. 집계 함수와 달리 그룹화하지 않고 개별 행에 대해 계산합니다. 각 행의 계산 결과는 해당 행의 윈도우(Window)에 속하는 모든 행의 값을 사용하여 계산됩니다.&lt;/p&gt;

&lt;p&gt;윈도우 함수를 사용하면 데이터 집합에서 개별 행에 대한 값을 계산하는 것이 가능합니다. 일반적으로, 윈도우 함수는 데이터 집합에서 일부 행에 대한 통계를 계산하기 위해 사용됩니다. 윈도우 함수는 행과 행 사이에서 연산을 수행하고 결과 집합에 포함될 행을 결정하는 데 사용됩니다.&lt;/p&gt;

&lt;p&gt;데이터베이스를 사용한 온라인 분석 처리 용도로 사용하기 위해 추가된 기능으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OLAP(On-Line Analytical Processing)&lt;/code&gt; 함수라고도 합니다.&lt;/p&gt;

&lt;p&gt;윈도우 함수는 다음과 같은 구문을 가집니다.&lt;/p&gt;

&lt;h6 id=&quot;윈도우-함수-구문&quot;&gt;윈도우 함수 구문&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;윈도우함수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OEVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...]]&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...]]&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WINDOWING&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;절&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;윈도우 함수를 사용하려면 OVER() 구문을 사용하여 윈도우를 정의해야 합니다. 윈도우는 연산을 수행할 데이터의 범위를 지정하며, 연산 범위는 WINDOWING절에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROWS&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RANGE&lt;/code&gt;로 정의됩니다. ROWS는 행 수로, RANGE는 값의 범위로 윈도우를 정의합니다. ROWS나 RANGE 구문 뒤에는 윈도우 크기를 나타내는 값이 올 수 있습니다.&lt;/p&gt;

&lt;p&gt;WINDOWING절은 다음과 같은 구문을 가집니다.&lt;/p&gt;

&lt;h6 id=&quot;windowing절-구문&quot;&gt;WINDOWING절 구문&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ROWS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RANGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;시작점&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;끝점&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;시작점은 다음과 같은 키워드를 사용할 수 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;키워드&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;UNBOUNDED PRECEDING&lt;/td&gt;
      &lt;td&gt;최초의 레코드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CURRENT ROW&lt;/td&gt;
      &lt;td&gt;현재의 레코드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;값 PRECEDING&lt;/td&gt;
      &lt;td&gt;값만큼 이전의 레코드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;값 FOLLOWING&lt;/td&gt;
      &lt;td&gt;값만큼 이후의 레코드&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;끝점은 다음과 같은 키워드를 사용할 수 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;키워드&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;UNBOUNDED FOLLOWING&lt;/td&gt;
      &lt;td&gt;마지막 레코드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CURRENT ROW&lt;/td&gt;
      &lt;td&gt;현재의 레코드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;값 PRECEDING&lt;/td&gt;
      &lt;td&gt;값만큼 이전의 레코드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;값 FOLLOWING&lt;/td&gt;
      &lt;td&gt;값만큼 이후의 레코드&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;WINDOWING절을 명시하지 않는 경우 기본값으로 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW&lt;/code&gt;가 적용됩니다.&lt;/p&gt;

&lt;p&gt;윈도우 함수의 유형에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;순위 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;집계 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;순서 함수&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;비율 함수&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;1-순위-함수&quot;&gt;(1) 순위 함수&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;순위 함수&lt;/code&gt;는 데이터의 순위를 계산하여 출력합니다. 이 때, 데이터가 중복되는 경우 같은 순위를 가지게 됩니다. SQL에서는 다음과 같은 3가지의 순위 함수를 제공합니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;순위함수&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;RANK&lt;/td&gt;
      &lt;td&gt;데이터의 순위를 계산하고, 같은 값이 있을 경우 중복 순위를 건너뛰고 다음 순위를 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DENSE_RANK&lt;/td&gt;
      &lt;td&gt;데이터의 순위를 계산하고, 같은 값이 있을 경우 중복 순위를 건너뛰지 않고 중복 순위를 포함한 순위를 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ROW_NUMBER&lt;/td&gt;
      &lt;td&gt;데이터의 순서에 따라 순번을 부여합니다. 같은 값이 있을 경우에도 중복되지 않고 각각의 순번을 출력합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;예를 들어, 다음과 같은 SCORES 테이블이 있다고 가정해 봅시다.&lt;/p&gt;

&lt;h6 id=&quot;순위-함수-예제-데이터&quot;&gt;순위 함수 예제 데이터&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SCORE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Carol&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;이 테이블에서 NAME 컬럼을 기준으로 정렬된 결과를 가지고, SCORE 컬럼의 누적 합계를 계산하려면 다음과 같이 윈도우 함수를 사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;rank-함수-예제&quot;&gt;RANK 함수 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;RANK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RANK&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 쿼리는 SCORES 테이블에서 SCORE 컬럼을 기준으로 내림차순으로 정렬한 결과를 기반으로, 각 데이터의 순위를 계산합니다. RANK() 함수는 동일한 순위를 갖는 데이터가 있을 경우 같은 순위를 부여하고, 그 다음 순위는 건너뛰어 다음으로 높은 순위를 부여합니다. 예를 들어, 첫 번째와 두 번째 데이터는 같은 순위(2위)를 부여하고, 그 다음 데이터는 4위를 부여합니다. 결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;rank-함수-결과&quot;&gt;RANK 함수 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;RANK&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Carol&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;다음은 DENSE_RANK() 함수를 사용하여 score 열을 기준으로 순위를 계산하는 쿼리의 예제입니다.&lt;/p&gt;

&lt;h6 id=&quot;dense_rank-함수-예제&quot;&gt;DENSE_RANK 함수 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;DENSE_RANK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RANK&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 쿼리는 RANK() 함수와 비슷하게, SCORES 테이블에서 SCORE 컬럼을 기준으로 내림차순으로 정렬한 결과를 기반으로, 각 데이터의 순위를 계산합니다. 하지만 DENSE_RANK() 함수는 동일한 순위를 갖는 데이터가 있을 경우 같은 순위를 부여하고, 그 다음 순위는 건너뛰지 않고 동일한 순위를 부여합니다. 예를 들어, 첫 번째와 두 번째 데이터는 같은 순위(2위)를 부여하고, 그 다음 데이터는 3위를 부여합니다. 결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;dense_rank-함수-결과&quot;&gt;DENSE_RANK 함수 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;RANK&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Carol&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;마지막으로, ROW_NUMBER() 함수를 사용하여 SCORE 컬럼을 기준으로 순위를 계산하는 쿼리의 예제를 살펴보겠습니다.&lt;/p&gt;

&lt;h6 id=&quot;row_number-함수-예제&quot;&gt;ROW_NUMBER 함수 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;ROW_NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RANK&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 쿼리는 RANK() 함수와 DENSE_RANK() 함수와 달리, 각 데이터를 유일하게 구별하는 번호를 부여합니다. SCORES 테이블에서 SCORE 컬럼을 기준으로 내림차순으로 정렬한 결과를 기반으로, 각 데이터에 대해 1부터 순차적으로 번호를 부여합니다. 결과는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;row_number-함수-결과&quot;&gt;ROW_NUMBER 함수 결과&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;RANK&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Carol&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;ROW_NUMBER() 함수는 특히 페이징 처리(paging)에 유용합니다. 페이징 처리란, 대량의 데이터를 페이지 단위로 나누어 출력하는 것을 의미합니다. 예를 들어, 위 쿼리 결과에서 첫 번째 페이지에는 1부터 2까지의 데이터를, 두 번째 페이지에는 3부터 4까지의 데이터를 출력할 수 있습니다.&lt;/p&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;2-집계-함수&quot;&gt;(2) 집계 함수&lt;/h4&gt;

&lt;p&gt;윈도우 함수의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;집계 함수&lt;/code&gt;는 파티션 별 윈도우 내에서 데이터를 그룹화하여 통계적으로 계산한 결과를 반환하는 함수입니다. 전체 데이터셋을 기준으로 계산하는 일반적인 집계 함수와는 달리 더욱 세부적인 집계 결과를 얻을 수 있습니다.&lt;/p&gt;

&lt;p&gt;윈도우 함수 중 집계 함수로는 다음과 같은 함수가 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;집계함수&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SUM&lt;/td&gt;
      &lt;td&gt;윈도우 내 숫자형 데이터의 합을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AVG&lt;/td&gt;
      &lt;td&gt;윈도우 내 숫자형 데이터의 평균을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIN&lt;/td&gt;
      &lt;td&gt;윈도우 내 숫자형 데이터의 최소값을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAX&lt;/td&gt;
      &lt;td&gt;윈도우 내 숫자형 데이터의 최대값을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT&lt;/td&gt;
      &lt;td&gt;윈도우 내 데이터의 개수를 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;다음과 같은 SCORES 테이블이 있다고 가정해 봅시다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SCORE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;95&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위 테이블에서 윈도우 함수의 집계 함수를 사용하여 SUBJECT를 그룹으로 묶어 각 그룹의 집계 결과를 구할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;윈도우-함수-중-집계-함수의-예제&quot;&gt;윈도우 함수 중 집계 함수의 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;n&quot;&gt;SUBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT_TOTAL_SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT_AVG_SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT_MIN_SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT_MAX_SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	     &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBJECT_COUNT_SCORE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NAME&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT_TOTAL_SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT_AVG_SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT_MIN_SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT_MAX_SCORE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SUBJECT_COUNT_SCORE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;310&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;77.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;310&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;77.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;310&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;77.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;english&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;310&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;77.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;70&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;350&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;87.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;95&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;350&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;87.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;95&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;350&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;87.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;95&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;math&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;95&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;350&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;87.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;95&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;85&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;330&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;82.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;330&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;82.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Alice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;330&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;82.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bob&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;science&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;330&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;82.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;3-순서-함수&quot;&gt;(3) 순서 함수&lt;/h4&gt;

&lt;p&gt;윈도우 함수 중 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;순서 함수&lt;/code&gt;는 각 행의 이전이나 다음 행의 값을 가져오거나, 윈도우 내에서의 첫 번째나 마지막 값을 가져오는 함수입니다.&lt;/p&gt;

&lt;p&gt;윈도우 함수 중 순서 함수로는 다음과 같은 함수가 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;순서함수&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LAG&lt;/td&gt;
      &lt;td&gt;윈도우 내에서 이전 행의 값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LEAD&lt;/td&gt;
      &lt;td&gt;윈도우 내에서 이후 행의 값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FIRST_VALUE&lt;/td&gt;
      &lt;td&gt;윈도우 내에서 첫 번째 값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LAST_VALUE&lt;/td&gt;
      &lt;td&gt;윈도우 내에서 마지막 값을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;다음과 같은 SALES 테이블이 있다고 가정해 봅시다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DATA&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-03&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-04&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-05&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위 테이블에에서 순서 함수를 사용해 보겠습니다.&lt;/p&gt;

&lt;h6 id=&quot;윈도우-함수-중-순서-함수의-예제&quot;&gt;윈도우 함수 중 순서 함수의 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;LEAD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NEXT_AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;LAG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PREV_AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;FIRST_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FIRST_AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;LAST_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAST_AMOUNT&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SALES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DATE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NEXT_AMOUNT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;PREV_AMOUNT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FIRST_AMOUNT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LAST_AMOUNT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-03&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-04&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-05&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;파티셔닝을 하지 않았기 때문에 전체 행을 하나로 그룹화 합니다. LEAD와 LAG 함수는 직관적으로 알 수 있을 것입니다. FIRST_VALUE와 LAST_VALUE의 경우 이해가 어려울 수 있는데 앞서 말한 WINDOWING절의 기본값이 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW&lt;/code&gt; 이기 때문에 이러한 결과가 나왔습니다. 처음 행부터 현재 행까지가 하나의 윈도우가 되기 때문에 FIRST_AMOUNT는 항상 첫 번째 행의 AMOUNT인 100이, LAST_AMOUNT는 현재 행의 AMOUNT가 출력됩니다.&lt;/p&gt;

&lt;h4 style=&quot;color:royalblue; margin-bottom:1.5em&quot; id=&quot;4-비율-함수&quot;&gt;(4) 비율 함수&lt;/h4&gt;

&lt;p&gt;윈도우 함수 중 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;비율 함수&lt;/code&gt;는 파티션 내 백분율을 계산하거나 비율에 따라 n등분 할 수 있는 함수입니다.&lt;/p&gt;

&lt;p&gt;윈도우 함수 중 비율 함수에는 다음과 같은 함수가 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;순서함수&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;RATIO_TO_RERORT&lt;/td&gt;
      &lt;td&gt;윈도우 내 SUM 값에 대한 백분율을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PERCENT_RANK&lt;/td&gt;
      &lt;td&gt;윈도우 내 순서별 백분율을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CUME_DIST&lt;/td&gt;
      &lt;td&gt;윈도우 내 순서별 누적 백분율을 계산합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NTILE&lt;/td&gt;
      &lt;td&gt;윈도우 내 데이터를 정렬하여 동일한 크기의 버킷으로 분할 한 후 각 버킷에 번호를 할당하는 함수입니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;다음과 같은 SALES 테이블이 있다고 가정해 봅시다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DATA&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-03&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-04&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-05&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위 테이블에에서 비율 함수를 사용해 보겠습니다.&lt;/p&gt;

&lt;h6 id=&quot;윈도우-함수-중-비율-함수의-예제&quot;&gt;윈도우 함수 중 비율 함수의 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;RATIO_TO_REPORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AMOUNT_SUM_RATIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;PERCENT_RANK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AMOUNT_RATIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;CUME_DIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AMOUNT_CUM_DIST&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SALES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;RATIO_TO_REPORT 함수는 SUM값을 그룹하기 위한 컬럼을 인수로 설정하고, OVER() 구문에서 ORDER BY절을 사용하지 않습니다.&lt;/p&gt;

&lt;p&gt;반면 PERCENT_RANK와 CUME_DIST 함수는 인수가 없으며, OVER() 구문에서 ORDER BY절을 통한 정렬이 필요합니다.&lt;/p&gt;

&lt;p&gt;결과는 다음과 같습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DATE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT_SUM_RATIO&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT_RATIO&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;AMOUNT_CUM_DIST&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0666666667&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1333333333&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.25&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-03&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-04&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;400&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.2666666667&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.75&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2022-01-05&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;500&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.3333333333&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">함수(Function)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - WHERE절</title>
      <link href="https://huimang2.github.io/sql/where" rel="alternate" type="text/html" title="SQL - WHERE절" />
      <published>2023-02-26T11:00:00+09:00</published>
      <updated>2023-02-26T11:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/where</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/where">&lt;h1 id=&quot;where절&quot;&gt;WHERE절&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE절&lt;/code&gt;은 SELECT문을 통해 데이터를 조회할때 특정 조건에 부합하는 자료를 검색하기 위한 명령어입니다. WHERE절은 FROM절 다음에 위치합니다.&lt;/p&gt;

&lt;h6 id=&quot;where절-1&quot;&gt;WHERE절&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건식&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;WHERE절의 조건식을 구성하하는 연산자에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;비교 연산자&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SQL 연산자&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;논리 연산자&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;부정 연산자&lt;/code&gt; 4가지 종류가 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;비교-연산자&quot;&gt;비교 연산자&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;비교 연산자&lt;/code&gt;는 연산자를 기준으로 하여 왼쪽값과 오른쪽값의 크기를 비교하기 위한 연산자 입니다.&lt;/p&gt;

&lt;h6 id=&quot;비교-연산자-종류&quot;&gt;비교 연산자 종류&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;연산자&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;=&lt;/td&gt;
      &lt;td&gt;같음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;보다 큼&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;gt;=&lt;/td&gt;
      &lt;td&gt;보다 크거나 작음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;&lt;/td&gt;
      &lt;td&gt;보다 작음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;=&lt;/td&gt;
      &lt;td&gt;보다 작거나 같음&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;예를 들어 BOARD 테이블에서 DOCUMENT_IDX가 10보다 작은 레코드를 선택하려면 다음과 같이 쿼리문을 작성하면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;비교연산자-예제&quot;&gt;비교연산자 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sql-연산자&quot;&gt;SQL 연산자&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SQL 연산자&lt;/code&gt;는 기본적으로 예약된 연산자로서 모든 데이터 타입에 대하여 연산이 가능합니다.&lt;/p&gt;

&lt;h6 id=&quot;sql-연산자-종류&quot;&gt;SQL 연산자 종류&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;연산자&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;BETWEEN A AND B&lt;/td&gt;
      &lt;td&gt;A이상 B이하의 값&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IN (LIST)&lt;/td&gt;
      &lt;td&gt;LIST에 있는 값 중 하나 이상을 포함&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;LIKE ‘비교문자열’&lt;/td&gt;
      &lt;td&gt;비교 문자열과 형태가 일치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IS NULL&lt;/td&gt;
      &lt;td&gt;NULL값을 가짐&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;예를 들어 BOARD 테이블에서 DOCUMENT_IDX가 5이상 10이하인 작은 레코드를 선택하려면 다음과 같이 쿼리문을 작성하면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;between-연산자&quot;&gt;BETWEEN 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 쿼리문은 아래에서 설명할 논리 연산자를 통해 다음과 같이 나타낼 수도 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;between-연산자를-논리-연산자로-표현&quot;&gt;BETWEEN 연산자를 논리 연산자로 표현&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;BOARD 테이블에서 DOCUMENT_IDX가 1, 10인 레코드를 선택하려면 다음과 같이 쿼리문을 작성합니다.&lt;/p&gt;

&lt;h6 id=&quot;in-연산자&quot;&gt;IN 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IN&lt;/code&gt; 연산자 또한 논리 연산자로 나타낼 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;in-연산자를-논리-연산자로-표현&quot;&gt;IN 연산자를 논리 연산자로 표현&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;와일드카드&lt;/code&gt;는 한 개 또는 0개 이상의 문자를 대신하여 사용하기 위한 특수 문자열입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE 연산자&lt;/code&gt;의 경우 와일드카드를 사용하여 비교문자열을 나타냄으로써 다양한 형태의 문자열을 선택할 수 있습니다.&lt;/p&gt;

&lt;p&gt;와일드카드는 정규표현식과 유사한데, 0개 이상의 임의 문자열은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;, 1개의 임의 문자열은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;으로 나타냅니다. 와일드 카드를 사용한 사례는 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;와일드카드-사용-사례&quot;&gt;와일드카드 사용 사례&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;와일드카드&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;a%&lt;/td&gt;
      &lt;td&gt;a로 시작하는 모든 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%a&lt;/td&gt;
      &lt;td&gt;a로 끝나는 모든 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%a%&lt;/td&gt;
      &lt;td&gt;a가 포함된 모든 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;___&lt;/td&gt;
      &lt;td&gt;3글자인 모든 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[abc]%&lt;/td&gt;
      &lt;td&gt;a 또는 b 또는 c로 시작하는 모든 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[^a]%&lt;/td&gt;
      &lt;td&gt;1번째 글자가 a가 아닌 모든 문자열&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;예를 들어 BOARD 테이블에서 TITLE이 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;제목&lt;/code&gt;으로 시작하는 레코드를 선택하려면 다음과 같이 쿼리문을 작성하면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;like-연산자&quot;&gt;LIKE 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약 비교문자열에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;와 같은 와일드카드로 사용하는 특수문자가 포함된다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ESCAPE&lt;/code&gt;를 사용합니다.&lt;/p&gt;

&lt;h6 id=&quot;escape-사용&quot;&gt;ESCAPE 사용&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목#_%'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ESCAPE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에 쿼리문의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;을 ESCAPE 문자로 인식하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;문자 뒤에 나오는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;를 와일드카드가 아닌 일반 문자열로 인식하여 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;제목_&lt;/code&gt;으로 시작하는 레코드를 선택하게 됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;만약 값이 NULL이라면 알 수 없는 값으로 비교 자체가 불가하므로 비교연산자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt;을 사용하여 조건문을 작성할 수 없습니다. 대신에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IS NULL&lt;/code&gt; 연산자를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;예를 들어 BOARD 테이블에서 CONTENTS가 NULL인 레코드를 선택하려면 다음과 같이 쿼리문을 작성합니다.&lt;/p&gt;

&lt;h6 id=&quot;is-null-연산자&quot;&gt;IS NULL 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTETS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;논리-연산자&quot;&gt;논리 연산자&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;논리 연산자&lt;/code&gt;는 여러 조건을 논리적으로 연결하기 위해 사용되는 연산자 입니다.&lt;/p&gt;

&lt;h6 id=&quot;논리-연산자-종류&quot;&gt;논리 연산자 종류&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;연산자&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AND&lt;/td&gt;
      &lt;td&gt;모든 조건을 만족(교집합)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;OR&lt;/td&gt;
      &lt;td&gt;조건 중 하나라도 만족(합집합)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NOT&lt;/td&gt;
      &lt;td&gt;반대의 조건을 만족(여집합)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;예를 들어 BOARD 테이블에서 DOCUMENT_IDX가 10이상이고 TITLE이 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;제목&lt;/code&gt;으로 시작하는 레코드를 선택하려면 다음과 같이 쿼리문을 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;논리-연산자-1&quot;&gt;논리 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;논리 연산자를 가시성있도록 표현하기위해 관례적으로 WHERE 키워드 뒤에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 = 1&lt;/code&gt;을 붙이는데, 이 표현은 항상 참(True)이 됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;NOT 연산자를 통해 SQL 연산자의 부정을 나타낼 수도 있습니다. 예를 들어 TITLE이 NULL이 아닌 레코드를 선택하려면 다음과 같이 쿼리문을 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;not-연산자&quot;&gt;NOT 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;부정-연산자&quot;&gt;부정 연산자&lt;/h2&gt;

&lt;p&gt;부정 연산자는 비교 연산자나 SQL 연산자의 부정을 나타냅니다. 비교연산자의 경우 ISO 표준으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt; 기호를 사용하며, 일부 DBMS에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!=&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^=&lt;/code&gt; 기호를 사용하여 부정을 나타낼 수도 있습니다.&lt;/p&gt;

&lt;p&gt;마이바티스에서는 XML 문서를 통해 Mapper에 SQL 쿼리문을 작성하게 되는데, 이때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt; 기호의 경우 태그가 아닌 문자 데이터임을 나타내기 위해 CDATA를 사용하여 쿼리문을 감싸줍니다. 하지만 CDATA를 사용하지 않고 바로 쿼리문을 작성하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!=&lt;/code&gt; 기호를 사용하기도 합니다.&lt;/p&gt;

&lt;h6 id=&quot;부정-연산자-1&quot;&gt;부정 연산자&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 쿼리문을 작성한다면 DOCUMENT_IDX가 10 이상인 레코드를 선택하게 되며, 다음과 같이 나타낼 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;not-연산자-제거&quot;&gt;NOT 연산자 제거&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;top-n-쿼리&quot;&gt;Top N 쿼리&lt;/h1&gt;

&lt;p&gt;테이블에서 상위 N개의 레코드를 선택하기 이한 쿼리문을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Top N 쿼리&lt;/code&gt;라고 합니다. 오라클의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROWNUM&lt;/code&gt;이라는 가상 컬럼을 사용하여 해당 쿼리를 수행할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;rownum을-통한-top-n-쿼리-수행&quot;&gt;ROWNUM을 통한 Top N 쿼리 수행&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRODUCT&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRICE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROWNUM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에 쿼리의 경우 PRODUCT 테이블에서 PRICE를 높은 순서로 배열하여 상위 3개의 레코드를 선택하게 되는데 뭔가 복잡해 보입니다. 이렇게 작성된 이유는 쿼리문의 실행 순서때문인데, 차후 설명할 인라인뷰에서 다시 설명하도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;SQL Server에서는 다음과 같이 쿼리를 작성할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;sql-server에서-top-n-쿼리-수행&quot;&gt;SQL Server에서 Top N 쿼리 수행&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRODUCT&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRICE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PRICE가 상위 20% 이내에 포함된 레코드를 선택하려면 다음과 같이 작성합니다.&lt;/p&gt;

&lt;h6 id=&quot;가격이-상위-20-이내인-레코드-선택&quot;&gt;가격이 상위 20% 이내인 레코드 선택&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOP&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERCENT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRODUCT&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRICE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;N에 상관없이 마지막 레코드와 동일한 값을 가지는 레코드를 모두 선택하려면 WITH TIES 키워드를 입력합니다.&lt;/p&gt;

&lt;h6 id=&quot;동일한-값을-가지는-모든-레코드-선택&quot;&gt;동일한 값을 가지는 모든 레코드 선택&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOP&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRODUCT&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRICE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">WHERE절</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - 트랜잭션(Transaction)</title>
      <link href="https://huimang2.github.io/sql/transaction" rel="alternate" type="text/html" title="SQL - 트랜잭션(Transaction)" />
      <published>2023-02-23T01:00:00+09:00</published>
      <updated>2023-02-23T01:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/transaction</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/transaction">&lt;h1 id=&quot;트랜잭션이란&quot;&gt;트랜잭션이란?&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;트랜잭션(Transaction)&lt;/code&gt;은 업무 처리를 위한 데이터베이스의 논리적인 작업 단위입니다. 하나의 트랜잭션은 한 개 이상의 연산으로 이루어질 수 있으며, 연산들은 완전히 처리되거나 하나도 처리되지 않아야 합니다.&lt;/p&gt;

&lt;h1 id=&quot;트랜잭션-제어어transaction-control-language-tcl&quot;&gt;트랜잭션 제어어(Transaction Control Language, TCL)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;트랜잭션 제어어(Transaction Control Language, TCL)&lt;/code&gt;는 트랜잭션을 제어하는 SQL 명령어이며, 여기에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COMMIT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROLLBACK&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SAVEPOINT&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;commit&quot;&gt;COMMIT&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COMMIT&lt;/code&gt; 명령어는 하나의 트랜잭션을 정상적으로 완료하고 그 결과를 데이터베이스에 반영하는 명령어 입니다.&lt;/p&gt;

&lt;h2 id=&quot;rollback&quot;&gt;ROLLBACK&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROLLBACK&lt;/code&gt; 명령어는 트랜잭션을 취소하기 위한 명령어 입니다. 데이터베이스가 트랜잭션 도중에 비정상적으로 종료되면 자동으로 ROLLBACK이 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;savepoint&quot;&gt;SAVEPOINT&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SAVEPOINT&lt;/code&gt; 명령어는 하나의 트랜잭션을 여러 지점으로 분리하여 저장하는 명령어 입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SAVEPOINT 지점명&lt;/code&gt;으로 SAVEPOINT를 설정하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROLLBACK TO 지점명&lt;/code&gt;으로 해당 SAVEPOINT까지 ROLLBACK을 할 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;트랜잭션의-특성-acid&quot;&gt;트랜잭션의 특성: ACID&lt;/h1&gt;

&lt;p&gt;트랜잭션은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;원자성(Atomicity)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;일관성(Consistency)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;격리성(Isolation)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;영속성(Durability)&lt;/code&gt; 4가지 특성을 가집니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;원자성&lt;/code&gt;은 트랜잭션의 작업이 부분적으로 실행되거나 중단되지 않는 것을 보장하는 성질을 말합니다. 즉, 트랜잭션에서 정의된 연산들은 모두 성공적으로 실행되거나 전혀 실행되지 않아야 한다는 것(All or Nothing)을 의미합니다. 예를 들어 인터넷 뱅킹으로 송금을 한다면 나의 계좌에서 금액이 차감되고 상대방의 계좌에서는 금액이 증가합니다. 두 연산은 모두 수행되어야하며, 중간에 오류가 발생한다면 ROLLBACK되어 모든 연산이 수행되지 않은 상태로 돌아가게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;일관성&lt;/code&gt;은 트랜잭션이 실행되기 전과 후의 데이터베이스 상태가 일관되어야 한다는 성질을 말합니다. 예를 들어 송금을 하기 위해서는 수신자와 발신자의 데이터가 모두 입력되어야 하는 제약사항을 가지는데, 수신자의 계좌번호를 입력하지 않는다면 데이터베이스의 일관성이 변하게 되므로 트랜잭션이 수행되지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;격리성&lt;/code&gt;은 모든 트랜잭션은 다른 트랜잭션으로부터 독립된다는 성질을 말합니다. 예를 들어 내 계좌에 10,000원이 있고 두 사람에게 동시에 6,000원씩 이체한다면 한꺼번에 12,000원이 송금되는 것이 아니라 첫번재 사람에게 먼저 송금 트랜잭션이 수행되고 순차적으로 2번째 사람에게 송금 트랜잭션이 수행됩니다. 이때 계좌의 금액은 0원 이상이 되어야 한다는 일관성이 유지되어야 하므로 2번째 송금은 수행되지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;영속성&lt;/code&gt;은 트랜잭션이 성공적으로 수행될 경우 그 결과는 영구적으로 데이터베이스에 저장되는 성질을 말합니다. 송금 트랜잭션이 성공적으로 수행되었다면 송금 시스템이 재부팅 되더라도 송금 결과는 변하지 않아야 합니다.&lt;/p&gt;

&lt;h1 id=&quot;트랜잭션의-격리성-수준&quot;&gt;트랜잭션의 격리성 수준&lt;/h1&gt;

&lt;p&gt;트랜잭션의 격리성을 보장하기 위해서는 동시에 처리되는 트랜잭션을 차례대로 실행해야 하지만, 이 경우 처리 성능이 나빠질 수 있습니다. 이러한 문제로 인하여 ANSI/ISO SQL 표준에서는 격리 수준을 4가지로 정의합니다.&lt;/p&gt;

&lt;h2 id=&quot;0단계-redad-uncommitted&quot;&gt;0단계: REDAD-UNCOMMITTED&lt;/h2&gt;

&lt;p&gt;0단계에서는 트랜잭션에서 변경된 내용이 COMMIT이나 ROLLBACK의 여부에 상관없이 다른 트랜잭션에서 값을 읽을 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;redad-uncommitted&quot;&gt;REDAD-UNCOMMITTED&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img015.png&quot; alt=&quot;img015&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;트랜잭션1에서 DOCUMENT_IDX가 2인 레코드를 INSERT하고 아직 COMMIT이 이루어지지 않았지만 트랜잭션2에서 DOCUMENT_IDX가 2인 레코드를 조회했습니다. 이 경우 트랜잭션1에서 문제가 발생하여 ROLLBACK이 되거나 UPDATE를 통해 내용을 수정하더라도 트랜잭션2에서는 잘못된 데이터를 가지고 처리를 하게 됩니다.&lt;/p&gt;

&lt;p&gt;이렇게 아직 COMMIT 되지 않은 데이터를 읽어 일관성이 보장되지 않는 현상을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dirty Read&lt;/code&gt;라고 합니다. 데이터 정합성 문제가 많기때문에 RDBMS에서는 거의 사용하지 않습니다.&lt;/p&gt;

&lt;h2 id=&quot;1단계-redad-committed&quot;&gt;1단계: REDAD-COMMITTED&lt;/h2&gt;

&lt;p&gt;1단계에서는 COMMIT이 완료된 데이터만 다른 트랜잭션에서 값을 읽을 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;redad-uncommitted-1&quot;&gt;REDAD-UNCOMMITTED&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img016.png&quot; alt=&quot;img016&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;트랜잭션1에서 DOCUMENT_IDX가 2인 레코드를 UPDATE하면 수정되기 전 레코드는 UNDO 영역에 백업이 됩니다. 트랜잭션2는 트랜잭션1의 COMMIT이 수행되기 전까지 UNDO 영역에 백업된 레코드를 읽게 되므로 Dirty Read 현상이 발생하지 않습니다.&lt;/p&gt;

&lt;p&gt;그러나 트랜잭션1이 COMMIT을 수행한 후 트랜잭션2에서 동일한 레코드를 조회하면 값이 변경되어 일관성이 보장되지 않게 되는데, 이러한 현상을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Non-Repeatable Read&lt;/code&gt;라고 합니다.&lt;/p&gt;

&lt;p&gt;오라클에서는 READ-COMMITTED를 기본 격리수준으로 사용합니다.&lt;/p&gt;

&lt;h2 id=&quot;2단계-repeatable-read&quot;&gt;2단계: REPEATABLE-READ&lt;/h2&gt;

&lt;p&gt;2단계에서는 트랜잭션이 완료되기 전까지 Shared-Lock을 적용하여 다른 트랜잭션에서 해당 데이터를 수정할 수 없도록 합니다.&lt;/p&gt;

&lt;h6 id=&quot;repeatable-read&quot;&gt;REPEATABLE-READ&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img017.png&quot; alt=&quot;img017&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;트랜잭션1이 COMMIT을 수행하더라도 트랜잭션2는 COMMIT을 수행하기 전까지 UNDO 영역에 백업된 데이터를 읽으므로 Non-Repeatable Read 현상이 발생하지 않습니다.&lt;/p&gt;

&lt;p&gt;그러나 트랜잭션2가 COMMIT을 수행한다면 트랜잭션 중에 없던 레코드가 추가되거나 없어지는 현상이 발생하는데, 이러한 현상을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pantom Read&lt;/code&gt;라고 합니다.&lt;/p&gt;

&lt;p&gt;MySQL이나 MariaDB의 InnoDB 스토리지 엔진에서는 REPEATAbLE-READ를 기본 격리수준으로 사용하며, 다중 버전 병행 제어(Multi Version Concurrency Control, MVCC)를 통해 해당 격리 수준에서도 Pantom Read 현상이 발생하지 않습니다.&lt;/p&gt;

&lt;h2 id=&quot;3단계-serializable-read&quot;&gt;3단계: SERIALIZABLE-READ&lt;/h2&gt;

&lt;p&gt;3단계는 가장 엄격한 격리 수준으로, 읽기 작업에도 Shared-Lock을 적용하기 때문에 트랜잭션이 COMMIT 되기 전까지 다른 트랜잭션에서는 해당 데이터를 수정하지 못할 뿐만 아니라 읽을 수도 없습니다. 그렇기 때문에 Pantom Read 현상이 발생하지 않습니다.&lt;/p&gt;

&lt;p&gt;그러나 트랜잭션의 동시제어가 불가능하여 성능이 좋지 않기때문에 RDBMS에서는 거의 사용되지 않습니다. MySQL의 경우 위에서 설명한 MCVCC를 통해 REPEATABLE-READ 격리 수준에서도 Pantom Read 현상이 발생하지 않기 때문에 사용할 필요가 없어보입니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">트랜잭션이란?</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - 데이터베이스(Database)</title>
      <link href="https://huimang2.github.io/sql/database" rel="alternate" type="text/html" title="SQL - 데이터베이스(Database)" />
      <published>2023-02-13T01:00:00+09:00</published>
      <updated>2023-02-13T01:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/database</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/database">&lt;h1 id=&quot;데이터베이스database&quot;&gt;데이터베이스(Database)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;데이터베이스(Database, DB)&lt;/code&gt;는 통합하여 관리되는 데이터의 집합체를 의미합니다. 데이터베이스는 자료를 구조화하여 중복된 데이터를 없애고 효율적인 처리를 할 수 있도록 관리되는데, 데이터베이스를 관리 및 제어하고 다수의 사용자가 데이터에 접근하여 이용할 수 있도록 해주는 소프트웨어를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;데이터베이스 관리시스템(Database Management System, DBMS)&lt;/code&gt;라고 합니다.&lt;/p&gt;

&lt;p&gt;DBMS의 유형은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;계층형(Hierarchical)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;네트워크형(Network)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;관계형(Relational)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;객체지향형(Object-Oriented)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;객체관계형(Object-Relational)&lt;/code&gt; 등으로 분류됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;계층형 모델&lt;/code&gt;은 데이터 간의 관계가 트리 형태로 구성되어 있는 모델입니다. 계층 간 1:M 형태로 구성 가능하며, 데이터를 세그먼트 단위로 관리하고 세그먼트 간의 계층을 트리 구조로 관리합니다.&lt;/p&gt;

&lt;h6 id=&quot;계층형-모델&quot;&gt;계층형 모델&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img007.png&quot; alt=&quot;img007&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;대통령 아래 국무총리가 있고, 국무총리 아래 부가 있으며, 부 아래 청이 있습니다. 부모 세그먼트는 다수의 자식 세그먼트와 연결되지만 자식 세그먼트는 오직 하나의 부모 세그먼트와 연결됩니다.&lt;/p&gt;

&lt;p&gt;이 모델은 한번 구축하면 구조 변경이 어렵고 같은 계층에 접근하는 것이 비효율적이기 때문에 현재는 거의 쓰이고 있지 않습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;네트워크형 모델&lt;/code&gt;은 계층형 DBMS의 단점을 보완하여 데이터 간에 M:N 구성이 가능한 모델입니다.&lt;/p&gt;

&lt;h6 id=&quot;네트워크형-모델&quot;&gt;네트워크형 모델&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img008.png&quot; alt=&quot;img008&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;계층형 모델의 경우 경찰청에서 국세청에 연결되기 위해서는 행정안전부 -&amp;gt; 국무총리 -&amp;gt; 기획재정부 -&amp;gt; 국세청 순서를 거쳐야 하지만, 네트워크형 모델의 경우 바로 연결될 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 구조가 복잡하여 유지보수 비용이 많이 들기때문에 계층형과 마찬가지로 현재는 거의 사용하지 않습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;관계형 모델&lt;/code&gt;은 키(key)와 값(value)으로 이루어진 데이터들을 행(row)과 열(column)로 구성된 테이블(table) 형태로 저장하고 관리하는 데이터베이스 모델입니다.&lt;/p&gt;

&lt;h6 id=&quot;관계형-모델&quot;&gt;관계형 모델&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img009.png&quot; alt=&quot;img009&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;오라클(Oracle), SQL Server, MySQL, MariaDB, PostgreSQL 등 대부분의 DBMS는 관계형 DBMS에 해당하며, SQL을 사용하여 데이터를 처리합니다.&lt;/p&gt;

&lt;h1 id=&quot;sqlstructured-query-language&quot;&gt;SQL(Structured Query Language)&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SQL(Structured Query Language)&lt;/code&gt;은 관계형 데이터베이스에서 사용되는 비절차적 언어로, 데이터의 정의(Definition), 조작(Manipulation), 제어(Control) 등을 위해 사용됩니다.&lt;/p&gt;

&lt;p&gt;DBMS 벤더에 따라 사용하는 SQL에 다소 차이가 있기때문에 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;미국 표준 협회(American National Standards Institute, ANSI)&lt;/code&gt;에서는 SQL에 대한 표준을 정하여 발표하였으며, 이를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;표준 SQL(ANSI SQL)&lt;/code&gt;이라고 합니다.&lt;/p&gt;

&lt;p&gt;각각의 벤더는 표준 SQL을 포함하여 추가로 자신만의 기능을 가지고 있는데, 이렇게 변형된 SQL을 오라클에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PL/SQL&lt;/code&gt;, SQL Server에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;T-SQL&lt;/code&gt;, MySQL에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SQL&lt;/code&gt; 이라고 부릅니다.&lt;/p&gt;

&lt;p&gt;현업에서는 오라클을 많이 사용하고 있으므로 PL/SQL 위주로 설명하도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;데이터-정의어data-definition-language-ddl&quot;&gt;데이터 정의어(Data Definition Language, DDL)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;데이터 정의어(Data Definition Language, DDL)&lt;/code&gt;는 데이터베이스의 테이블과 같은 데이터 구조나 구성 요소를 생성, 삭제, 변경하는 언어입니다.&lt;/p&gt;

&lt;p&gt;DDL의 대상은 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;테이블(table)&lt;/code&gt;, &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;뷰(view)&lt;/code&gt;, &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;인덱스(index)&lt;/code&gt;, &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;스키마(Schema)&lt;/code&gt; 등의 데이터베이스 객체이며, 명령어는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CREATE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALTER&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RENAME&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DROP&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TRUNCATE&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;create&quot;&gt;CREATE&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CREATE&lt;/code&gt; 명령어는 데이터베이스, 테이블, 인덱스 등을 생성하는 명령어이며, 테이블을 생성하기 위한 CREATE TABLE 문법은 다음과 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;create-table-문법&quot;&gt;CREATE TABLE 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;데이터타입&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;데이터타입&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기본키명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;고유키명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNIQUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;외래키명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;참조테이블&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;참조테이블&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;기본키&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제약조건명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CHECK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건식&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;데이터 타입에는 고정형 길이 문자 데이터인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHARACTER&lt;/code&gt;, 가변형 문자 데이터인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VARCHAR&lt;/code&gt;, 숫자 데이터인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NUMERIC&lt;/code&gt;, 날짜와 시각 데이터인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATETIME&lt;/code&gt;이 있습니다.&lt;/p&gt;

&lt;p&gt;오라클에서는 주로 CHARACTER를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHAR&lt;/code&gt;, VARCHAR를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VARCHAR2&lt;/code&gt;, NUMERIC을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NUMBER&lt;/code&gt;, DATETIME을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATE&lt;/code&gt;로 표현합니다. 또한 대용량 데이터의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOB&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BLOB&lt;/code&gt; 타입을 사용합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;제약조건&lt;/code&gt;은 데이터베이스 객체 중 하나이며, 데이터 무결성을 보장하기 위한 용도로 사용됩니다.&lt;/p&gt;

&lt;p&gt;무결성은 데이터베이스에 저장된 값들이 정확하고 일관성 있는 데이터임을 나타내는 특성으로, 여기에는 하나의 테이블에 중복된 행이 존재하지 않도록 보장하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;개체 무결성&lt;/code&gt;과 참조 관계에 있는 두 테이블의 데이터가 항상 일관된 값을 가짐을 보장하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;참조 무결성&lt;/code&gt;이 있습니다.&lt;/p&gt;

&lt;p&gt;제약조건에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT NULL&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UNIQUE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FOREIGN KEY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHECK&lt;/code&gt; 등이 있습니다. UNIQUE와 PRIMARY KEY는 개체 무결성을 보장하고, FOREIGN KEY는 참조 무결성을 보장합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT NULL&lt;/code&gt;의 경우 해당 컬럼에 반드시 데이터가 입력되도록 합니다. 만약 NULL이 입력된다면 오류가 발생합니다.&lt;/p&gt;

&lt;h6 id=&quot;not-null-제약조건&quot;&gt;NOT NULL 제약조건&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIRTH_DAY&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt;는 기본값을 나타내며, 데이터가 입력되지 않으면 기본값이 입력됩니다.&lt;/p&gt;

&lt;h6 id=&quot;default-제약조건&quot;&gt;DEFAULT 제약조건&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'anonymous'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIRTH_DAY&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UNIQUE&lt;/code&gt;는 테이블의 행을 고유하게 식별하기 위한 고유키를 정의하는 제약조건입니다. 동일한 컬럼에 대하여 중복된 값을 입력할 수 없지만, NULL의 경우 고유키의 제약대상이 아니므로 중복 입력이 가능합니다.&lt;/p&gt;

&lt;h6 id=&quot;unique-제약조건&quot;&gt;UNIQUE 제약조건&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNIQUE&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'anonymous'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIRTH_DAY&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 쿼리의 경우 EMP_ID가 고유키가 되며, 중복된 값이 입력되면 개체 무결성 제약조건 위반으로 오류가 발생합니다. 다만, NULL의 경우 중복입력이 되더라도 오류를 일으키지 않고 정상적으로 데이터가 입력됩니다.&lt;/p&gt;

&lt;p&gt;CONSTRAINT 키워드를 사용하여 고유키 이름을 지정할 수도 있씁니다.&lt;/p&gt;

&lt;h6 id=&quot;고유키-이름-설정&quot;&gt;고유키 이름 설정&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'anonymous'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIRTH_DAY&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_UNIQUE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNIQUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt;는 테이블의 행을 고유하게 식별하기 위한 기본키를 정의하는 제약조건입니다. UNIQUE + NOT NULL에 해당하기 때문에 NULL의 입력이 불가합니다.&lt;/p&gt;

&lt;h6 id=&quot;primary-key-제약조건&quot;&gt;PRIMARY KEY 제약조건&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'anonymous'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIRTH_DAY&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;UNIQUE와 마찬가지로 CONSTRAINT 키워드를 사용하여 선언할 수도 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;기본키-이름-설정&quot;&gt;기본키 이름 설정&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'anonymous'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIRTH_DAY&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FOREIGN KEY&lt;/code&gt;는 테이블 간의 참조 무결성을 위한 제약조건입니다.&lt;/p&gt;

&lt;h6 id=&quot;foreign-key-제약조건&quot;&gt;FOREIGN KEY 제약조건&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;COMMENT_IDX&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하나의 게시글에는 여러 댓글이 달릴 수 있으므로, BOARD COMMENTS는 1:M의 관계를 가집니다. 이때 댓글이 어느 게시글에 달렸는지 알기 위해서 DOCUMENT_IDX 컬럼을 통해 게시글을 참조하게 되므로, 참조 무결성을 보장하기 위해 DOCUMENT_IDX를 외래키로 설정합니다.&lt;/p&gt;

&lt;p&gt;다른 제약조건과 마찬가지로 CONSTRAINT 키워드를 통해 외래키 이름을 지정할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;외래키-이름-설정&quot;&gt;외래키 이름 설정&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;COMMENT_IDX&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENT_FK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참조 무결성 규칙은 자식 테이블의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;입력 참조 무결성 규칙&lt;/code&gt;과 부모 테이블의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;삭제/수정 참조 무결성 규칙&lt;/code&gt;으로 나눠집니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;입력 참조 무결성 규칙에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEPENDENT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AUTOMATIC&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET DEFAULT&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEPENDENT&lt;/code&gt;는 대응되는 부모 테이블에 인스턴스가 존재할 때만 자식 테이블에 데이터의 입력을 허용하여 무결성을 보장합니다.&lt;/p&gt;

&lt;p&gt;외래키를 설정할 때 &lt;code class=&quot;language-plaintext bgcolor orange highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;NOT NULL&lt;/code&gt; 제약조건을 설정해준다면 자식 테이블이 부모 테이블에 대하여 DEPENDENT 상태가 되어 무결성을 보장할 수 있습니다.&lt;/p&gt;

&lt;p&gt;만약 아래 쿼리처럼 존재하지 않는 document_idx가 1인 게시글에 댓글을 입력한다면 참조 무결성 위반이 되어 오류를 발생시킵니다.&lt;/p&gt;

&lt;h6 id=&quot;참조-무결성-제약-조건-위반&quot;&gt;참조 무결성 제약 조건 위반&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'댓글'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;참조-무결성-제약-조건-위반으로-인한-오류-발생&quot;&gt;참조 무결성 제약 조건 위반으로 인한 오류 발생&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img010.png&quot; alt=&quot;img010&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AUTOMATIC&lt;/code&gt;은 자식 테이블의 인스턴스 입력을 항상 허용하며, 대응되는 부모 테이블에 인스턴스가 없다면 이를 자동으로 생성하여 무결성을 보장합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt;은 자식 테이블의 인스턴스 입력을 항상 허용하며, 대응되는 부모 테이블에 인스턴스가 없다면 외래키를 NULL값으로 입력하여 무결성을 보장합니다. 이때 NOT NULL 제약조건이 설정되면 안됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET DEFAULT&lt;/code&gt;도 자식 테이블의 인스턴스 입력을 항상 허용하며, 대응되는 부모 테이블에 인스턴스가 없다면 외래키를 지정된 기본값으로 입력합니다. 이때 외래키가 설정되면 안됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;삭제/수정 참조 무결성 규칙에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RESTRICT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CASCADE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET DEFAULT&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RESTRICT&lt;/code&gt;는 대응되는 자식 테이블의 인스턴스가 없는 경우에만 부모 테이블의 인스턴스 삭제/수정을 허용하여 무결성을 보장합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CASCADE&lt;/code&gt;는 부모 테이블의 인스턴스 삭제/수정을 항상 허용하고, 대응되는 자식 테이블의 인스턴스를 자동으로 삭제/수정하여 무결성을 보장합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt;은 부모 테이블의 인스턴스 삭제/수정을 항상 허용하고, 대응되는 자식 테이블의 인스턴스의 외래키를 NULL값으로 수정하여 무결성을 보장합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET DEFAULT&lt;/code&gt;는 부모 테이블의 인스턴스 삭제/수정을 항상 허용하고, 대응되는 자식 테이블의 인스턴스의 외래키를 기본값으로 수정하여 무결성을 보장합니다.&lt;/p&gt;

&lt;p&gt;외래키를 설정하면 기본적으로 RESTRICT가 적용되어 부모 테이블의 인스턴스 삭제/수정에 제약이 생깁니다. 만약 아래 쿼리처럼 document_idx가 1인 게시글에 댓글이 있을 때 게시글을 삭제한다면 참조 무결성 위반이 되어 오류를 발생시킵니다.&lt;/p&gt;

&lt;h6 id=&quot;참조-무결성-제약-조건-위반-1&quot;&gt;참조 무결성 제약 조건 위반&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'내용1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'댓글1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;참조-무결성-제약-조건-위반으로-인한-오류-발생-1&quot;&gt;참조 무결성 제약 조건 위반으로 인한 오류 발생&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img011.png&quot; alt=&quot;img011&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SQL에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ON DELETE&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ON UPDATE&lt;/code&gt; 키워드를 통해 부모 테이블의 인스턴스 삭제/수정에 제약을 줄 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ON DELETE CASCADE&lt;/code&gt; 제약조건을 적용한 후 document_idx가 1인 게시글을 삭제한다면 해당 게시글과 연관된 모든 댓글이 자동으로 삭제됩니다.&lt;/p&gt;

&lt;p&gt;아래 쿼리를 순차적으로 실행하세요.&lt;/p&gt;

&lt;h6 id=&quot;on-delete-cascade&quot;&gt;ON DELETE CASCADE&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;COMMENT_IDX&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASCADE&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'댓글1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;게시글을 삭제할 때 댓글이 함께 삭제되었기 때문에 COMMENTS 테이블에는 인스턴스가 없는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;comments-테이블&quot;&gt;COMMENTS 테이블&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img012.png&quot; alt=&quot;img012&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;오라클에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ON UPDATE&lt;/code&gt; 키워드를 지원하지 않습니다. SQL Server에서 아래와 같이 테이블을 생성한 후 게시글의 document_idx를 수정한 후 COMMENTS 테이블을 조회하면 document_idx가 자동으로 수정된 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;on-update-cascade&quot;&gt;ON UPDATE CASCADE&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;NVARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;COMMENT_IDX&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASCADE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASCADE&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'내용1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'댓글1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;comments-테이블-1&quot;&gt;COMMENTS 테이블&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img013.png&quot; alt=&quot;img013&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CASCADE 대신에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt;을 설정하면 부모 테이블의 삭제 또는 수정시 자식 테이블의 외래키는 NULL값으로 설정됩니다. 이때 주의할 것은 NOT NULL 제약조건을 설정하면 안됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET DEFAULT&lt;/code&gt;의 경우 DEFAULT 제약 조건을 설정해야하며, 오라클은 SET DEFAULT를 지원하지 않습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHECK&lt;/code&gt;는 입력할 수 있는 값의 범위를 제한하는 제약조건 입니다.&lt;/p&gt;

&lt;h6 id=&quot;check-제약조건&quot;&gt;CHECK 제약조건&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;COMMENT_IDX&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASCADE&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;CHECK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;COMMENTS의 CONTENTS 컬럼은 10글자 이상이어야 합니다. 만약 10글자 미만이라면 제약조건 위반으로 오류를 발생시킵니다.&lt;/p&gt;

&lt;h6 id=&quot;제약조건-위반으로-인한-오류-발생&quot;&gt;제약조건 위반으로 인한 오류 발생&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img014.png&quot; alt=&quot;img014&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;alter&quot;&gt;ALTER&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALTER&lt;/code&gt; 명령어는 컬림이나 제약조건을 추가/삭제하기 위한 명령이며, 문법은 아래와 같습니다.&lt;/p&gt;

&lt;h6 id=&quot;컬럼-추가add&quot;&gt;컬럼 추가(ADD)&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터유형&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;컬럼-수정modify&quot;&gt;컬럼 수정(MODIFY)&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MODIFY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터유형&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;컬럼-삭제drop&quot;&gt;컬럼 삭제(DROP)&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;컬럼명-수정rename&quot;&gt;컬럼명 수정(RENAME)&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기존&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;새로운&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;제약조건-삭제drop-constraint&quot;&gt;제약조건 삭제(DROP CONSTRAINT)&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제약조건명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;제약조건-추가add-constraint&quot;&gt;제약조건 추가(ADD CONSTRAINT)&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제약조건명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제약조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rename&quot;&gt;RENAME&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RENAME&lt;/code&gt; 명령어는 테이블 등 데이터베이스 객체의 이름을 변경하는 명령어입니다.&lt;/p&gt;

&lt;h6 id=&quot;테이블-이름-변경&quot;&gt;테이블 이름 변경&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기존&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;새로운&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;SQL Server의 경우 RENAME 대신에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SP_RENAME&lt;/code&gt;을 사용합니다.&lt;/p&gt;

&lt;h6 id=&quot;sql-server-테이블-이름-변경&quot;&gt;SQL Server 테이블 이름 변경&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SP_RENAME&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기존&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;새로운&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;drop&quot;&gt;DROP&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DROP&lt;/code&gt; 명령어는 테이블 등 데이터베이스 객체를 삭제하는 명령어 입니다.&lt;/p&gt;

&lt;h6 id=&quot;테이블-삭제&quot;&gt;테이블 삭제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약 해당 테이블을 참조하는 다른 테이블이 있다면, 참조 무결성 제약을 제거해야만 테이블을 삭제할 수 있습니다. 오라클의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CASCADE CONSTRAINT&lt;/code&gt;를 설정하면 해당 테이블을 참조하는 참조 무결성 제약을 함께 삭제할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;참조-무결성-제약-삭제&quot;&gt;참조 무결성 제약 삭제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASCADE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 쿼리를 실행한다면 COMMENTS 테이블에서 DOCUMENT_IDX의 외래키가 삭제됩니다.&lt;/p&gt;

&lt;h3 id=&quot;truncate&quot;&gt;TRUNCATE&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TRUNCATE&lt;/code&gt; 명령어는 테이블에 저장된 모든 인스턴스를 삭제하는 명령어 입니다. 테이블 스키마까지 삭제하는 DROP 명령어와 달리 테이블 스키마는 남겨두고 테이블에 속하는 인스턴스만 제거하여 저장공간을 재사용할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;테이블-초기화&quot;&gt;테이블 초기화&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;TRUNCATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DML의 DELETE와 유사하지만 ROLLBACK이 가능한 DELETE와 달리 TRUNCATE는 ROLLBACK이 불가능합니다.&lt;/p&gt;

&lt;h2 id=&quot;데이터-조작어data-manipulation-language-dml&quot;&gt;데이터 조작어(Data Manipulation Language, DML)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;데이터 조작어(Data Manipulation Language, DML)&lt;/code&gt;는 데이터베이스에 저장된 데이터를 조회, 입력, 수정 및 삭제하는 데 사용하는 질의어 입니다. 비절차적 언어이며, 사용자가 어떤 데이터를 원하는지를 명세합니다.&lt;/p&gt;

&lt;p&gt;명령어는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;select&quot;&gt;SELECT&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 명령어는 테이블이나 뷰에 있는 데이터를 조회할 때 사용하는 명령어 입니다.&lt;/p&gt;

&lt;h6 id=&quot;select-문법&quot;&gt;SELECT 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;별명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;데이터를 조회할 때 필요한 것은 어디에서, 어떤 데이터를 가져올 것인지가 필요합니다. 이때 &lt;code class=&quot;language-plaintext bgcolor blue highlighter-rouge&quot; style=&quot;color:royalblue&quot;&gt;어디에서&lt;/code&gt; 가져올 것인지는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM절&lt;/code&gt;에 명시하고, &lt;code class=&quot;language-plaintext bgcolor blue highlighter-rouge&quot; style=&quot;color:royalblue&quot;&gt;어떤&lt;/code&gt; 데이터를 가져올 것인지는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT절&lt;/code&gt;에 기술합니다.&lt;/p&gt;

&lt;p&gt;컬럼을 지정할 때 중복된 데이터를 모두 조회할 것인지, 한번만 조회할 것인지는 컬럼명 앞에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALL&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; 키워드를 붙여 나타낼 수 있습니다. 생략하는 경우 기본값은 &lt;code class=&quot;language-plaintext bgcolor red highlighter-rouge&quot; style=&quot;color:orangered&quot;&gt;ALL&lt;/code&gt;입니다.&lt;/p&gt;

&lt;p&gt;2개 이상의 테이블에서 데이터를 조회하고 싶다면 콤마(,)를 구분자로 하여 테이블명을 나열하여 입력하면 되고, 어떤 테이블의 컬럼인지 구분하기위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AS&lt;/code&gt; 키워드를 통해 별명(Alias)을 지정할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;여러-테이블에서-데이터를-조회&quot;&gt;여러 테이블에서 데이터를 조회&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이때 AS 키워드를 생략할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;as-생략&quot;&gt;AS 생략&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;컬럼이름 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AS&lt;/code&gt; 키워드를 통해 별명을 지정할 수 있으며, 이 역시 생략이 가능합니다. 별명은 대소문자 구분이 없이 대문자로 표시되며, 별명을 예약어로 설정하거나 소문자를 입력하고 싶다면 쌍따옴표로 묶어주면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;컬럼에-별명-지정&quot;&gt;컬럼에 별명 지정&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_IDX&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COMMENT_IDX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C_IDX&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;COMMENT&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMMENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;컬럼명은 와일드카드(*)을 통해 컬럼 전체를 조회할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;와일드카드-사용&quot;&gt;와일드카드 사용&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE절&lt;/code&gt;에는 조건을 설정할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;조건-설정&quot;&gt;조건 설정&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;절을 통해서는 레코드의 정렬 순서를 지정해 줄 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;레코드-정렬&quot;&gt;레코드 정렬&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;WHERE절과 ORDER BY절은 차후에 자세히 설명하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;insert&quot;&gt;INSERT&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 명령어는 데이터의 내용을 입력할 때 사용하는 명령어 입니다.&lt;/p&gt;

&lt;h6 id=&quot;insert-문법&quot;&gt;INSERT 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;입력값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;입력값의 경우 컬럼명의 개수와 순서를 맞추어 입력합니다.&lt;/p&gt;

&lt;h6 id=&quot;insert-예제&quot;&gt;INSERT 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TItLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'내용1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이때 컬럼명을 생략하면 테이블 전체 컬럼에 데이터를 입력합니다.&lt;/p&gt;

&lt;h6 id=&quot;컬럼명-생략&quot;&gt;컬럼명 생략&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'내용1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;VALUES절 대신에 SELECT절을 통해 조회한 데이터를 입력할 수도 있으며, 이 경우 입력할 컬럼과 조회할 컬럼의 수와 순서는 동일해야합니다.&lt;/p&gt;

&lt;h6 id=&quot;insert-예제-1&quot;&gt;INSERT 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD_TEMP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'내용2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD_TEMP&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BOARD 테이블에서 조회한 전체 데이터가 BOARD_TEMP 테이블에 입력되는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;update&quot;&gt;UPDATE&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt; 명령어는 데이터의 내용을 수정할 때 사용하는 명령어 입니다.&lt;/p&gt;

&lt;h6 id=&quot;update-문법&quot;&gt;UPDATE 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변경값&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변경값&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이미 입력된 데이터를 변경해야 하므로, UPDATE 키워드 다음에 변경할 테이블을 입력하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SET절&lt;/code&gt;에는 컬럼과 값을 입력합니다. 특정 레코드의 컬럼 데이터만 변경하려면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE절&lt;/code&gt;에 조건문을 작성하면 됩니다.&lt;/p&gt;

&lt;h6 id=&quot;update-예제&quot;&gt;UPDATE 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TITLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'제목1 수정'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'내용1 수정'&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;delete&quot;&gt;DELETE&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; 명령어는 데이터의 내용을 삭제할 때 사용하는 명령어 입니다.&lt;/p&gt;

&lt;h6 id=&quot;delete-문법&quot;&gt;DELETE 문법&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;특정 테이블에서 조건에 해당하는 레코드를 삭제하며, WHERE절을 생략하면 전체 데이터를 삭제합니다.&lt;/p&gt;

&lt;p&gt;이때 ROLLBACK이 불가능한 TRUNCATE 명령어와 달리, DELETE는 COMMIT 하기 전까는 ROLLBACK이 가능합니다.&lt;/p&gt;

&lt;h6 id=&quot;delete-예제&quot;&gt;DELETE 예제&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM&lt;/code&gt; 키워드는 생략이 가능합니다.&lt;/p&gt;

&lt;h6 id=&quot;from-생략&quot;&gt;FROM 생략&lt;/h6&gt;
&lt;div data-lang=&quot;SQL&quot; class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOARD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOCUMENT_IDX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;트랜잭션-제어어transaction-control-language-tcl&quot;&gt;트랜잭션 제어어(Transaction Control Language, TCL)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;트랜잭션 제어어(Transaction Control Language, TCL)&lt;/code&gt;는 트랜잭션을 제어하는 명령어 입니다.&lt;/p&gt;

&lt;p&gt;트랜잭션은 업무 처리를 위한 데이터베이스의 논리적인 작업 단위입니다. 하나의 트랜잭션은 한 개 이상의 연산으로 이루어질 수 있으며, 연산들은 완전히 처리되거나 하나도 처리되지 않아야 합니다.&lt;/p&gt;

&lt;h3 id=&quot;트랜잭션의-특성-acid&quot;&gt;트랜잭션의 특성: ACID&lt;/h3&gt;

&lt;p&gt;트랜잭션은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;원자성(Atomicity)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;일관성(Consistency)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;격리성(Isolation)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;영속성(Durability)&lt;/code&gt; 4가지 특성을 가집니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;원자성&lt;/code&gt;은 트랜잭션의 작업이 부분적으로 실행되거나 중단되지 않는 것을 보장하는 성질을 말합니다. 즉, 트랜잭션에서 정의된 연산들은 모두 성공적으로 실행되거나 전혀 실행되지 않아야 한다는 것(All or Nothing)을 의미합니다. 예를 들어 인터넷 뱅킹으로 송금을 한다면 나의 계좌에서 금액이 차감되고 상대방의 계좌에서는 금액이 증가합니다. 두 연산은 모두 수행되어야하며, 중간에 오류가 발생한다면 ROLLBACK되어 모든 연산이 수행되지 않은 상태로 돌아가게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;일관성&lt;/code&gt;은 트랜잭션이 실행되기 전과 후의 데이터베이스 상태가 일관되어야 한다는 성질을 말합니다. 예를 들어 송금을 하기 위해서는 수신자와 발신자의 데이터가 모두 입력되어야 하는 제약사항을 가지는데, 수신자의 계좌번호를 입력하지 않는다면 데이터베이스의 일관성이 변하게 되므로 트랜잭션이 수행되지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;격리성&lt;/code&gt;은 모든 트랜잭션은 다른 트랜잭션으로부터 독립된다는 성질을 말합니다. 예를 들어 내 계좌에 10,000원이 있고 두 사람에게 동시에 6,000원씩 이체한다면 한꺼번에 12,000원이 송금되는 것이 아니라 첫번재 사람에게 먼저 송금 트랜잭션이 수행되고 순차적으로 2번째 사람에게 송금 트랜잭션이 수행됩니다. 이때 계좌의 금액은 0원 이상이 되어야 한다는 일관성이 유지되어야 하므로 2번째 송금은 수행되지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;영속성&lt;/code&gt;은 트랜잭션이 성공적으로 수행될 경우 그 결과는 영구적으로 데이터베이스에 저장되는 성질을 말합니다. 송금 트랜잭션이 성공적으로 수행되었다면 송금 시스템이 재부팅 되더라도 송금 결과는 변하지 않아야 합니다.&lt;/p&gt;

&lt;h3 id=&quot;트랜잭션의-격리성-수준&quot;&gt;트랜잭션의 격리성 수준&lt;/h3&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">데이터베이스(Database)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">SQL - 데이터 모델의 이해</title>
      <link href="https://huimang2.github.io/sql/concept" rel="alternate" type="text/html" title="SQL - 데이터 모델의 이해" />
      <published>2023-02-11T20:00:00+09:00</published>
      <updated>2023-02-11T20:00:00+09:00</updated>
      <id>https://huimang2.github.io/sql/concept</id>
      <content type="html" xml:base="https://huimang2.github.io/sql/concept">&lt;h1 id=&quot;모델링modeling이란&quot;&gt;모델링(Modeling)이란?&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모델(Model)&lt;/code&gt;은 현실 세계를 일정한 표기법에 따라 표현해 놓은 추상화된 모형입니다. 현실 세계에서 나타날 수 있는 다양한 현상은 사람, 사물, 개념 등에 의해 발생되는데, 이것을 표기법에 의해 규칙을 가지고 표현하는 것을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모델링(Modeling)&lt;/code&gt;이라고 합니다. 즉, 모델을 만들어가는 일 자체를 모델링이라고 정의할 수 있습니다.&lt;/p&gt;

&lt;h6 id=&quot;모델링&quot;&gt;모델링&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img001.png&quot; alt=&quot;img001&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모델링의 특징에는 현실세계를 일정한 형식에 맞춰 표현하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;추상화&lt;/code&gt;, 복잡한 현실세계를 제한된 표기법이나 언어로 효현하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;단순화&lt;/code&gt;, 누구나 이해하기 쉽게 현상을 기술하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;명확화&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;p&gt;모델링은 크게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;데이터 관점&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;프로세스 관점&lt;/code&gt;, 데이터와 프로세스의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;상관관점&lt;/code&gt;으로 구분할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;데이터 관점&lt;/strong&gt;: 업무가 어떤 데이터와 관련이 있는지 또는 데이터간의 관계가 무엇인지에 대해서 모델링하는 방법&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;프로세스 관점&lt;/strong&gt;: 업무가 실제하고 있는 일이 무엇인지 또는 무엇을 해야 하는지를 모델링하는 방법&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;상관관점&lt;/strong&gt;: 업무가 처리하는 일의 방법에 따라 데이터가 어떻게 영향을 받고 있는지 모델링하는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-모델링이란&quot;&gt;데이터 모델링이란?&lt;/h1&gt;

&lt;p&gt;데이터 모델링은 정보시스템을 구축하기 위한 &lt;strong&gt;&lt;u&gt;데이터관점&lt;/u&gt;&lt;/strong&gt;의 업무 분석 기법으로, 현실 세계에 존재하는 데이터를 컴퓨터 세계의 데이터베이스로 옮기는 과정을 말합니다. 조금 더 실무적으로 해석해보면 업무에 필요로 하는 데이터를 시스템 구축 방법론에 의해 분석하고 설계하여 정보시스템을 구축하는 과정으로 정의할 수 있습니다.&lt;/p&gt;

&lt;p&gt;데이터 모델링을 하는 이유는 업무정보를 구성하는 기초가 되는 정보들을 일정한 표기법에 의해 표현함으로써 정보시스템 구축의 대상이 되는 업무내용을 정확하게 분석하기 위함입니다. 또한 분석된 모델을 통해 실제 데이터베이스를 생성하여 개발 및 데이터관리에 사용하기 위함입니다.&lt;/p&gt;

&lt;p&gt;데이터 모델이 제공하는 기능은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;시스템을 현재 또는 원하는 모습으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가시화&lt;/code&gt;하도록 도와줍니다.&lt;/li&gt;
  &lt;li&gt;시스템을 구축하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;구조화&lt;/code&gt;된 틀을 제공합니다.&lt;/li&gt;
  &lt;li&gt;시스템의 구조와 행동을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;명세화&lt;/code&gt; 할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;시스템을 구축하는 과정에서 결정한 것을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;문서화&lt;/code&gt;합니다.&lt;/li&gt;
  &lt;li&gt;다양한 영역에 집중하기 위해 다른 영역의 세부 사항은 숨기는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;다양한 관점&lt;/code&gt;을 제공합니다.&lt;/li&gt;
  &lt;li&gt;특정 목표에 따라 구체화된 상세 수준의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;표현방법을 제공&lt;/code&gt;합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;데이터 모델링을 수행하는 과정에서 유의할 점은 데이터와 프로세스간의 유연성을 향상시키고, 데이터의 중복 저장을 피하며, 데이터에 모순이 발생하지 않아야 한다는 점입니다.&lt;/p&gt;

&lt;p&gt;데이터 모델링은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;사물(Things)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;속성(Attibutes)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;관계(Relationship)&lt;/code&gt; 3가지 요소로 구성되며, 추상화 수준에 따라 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;개념적 데이터 모델링&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;논리적 데이터 모델링&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;물리적 데이터 모델링&lt;/code&gt;의 3단계로 진행됩니다&lt;/p&gt;

&lt;h6 id=&quot;데이터-모델링의-3단계-진행&quot;&gt;데이터 모델링의 3단계 진행&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img002.png&quot; alt=&quot;img002&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;개념적 데이터 모델링은 조직, 사용자의 데이터 요구사항을 찾고 분석하는데서 시작됩니다. 이 단계에서는 핵심 엔티티와 그들 간의 관계를 발견하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;개체-관계 다이어그램(Entity-Relation Diagram, ERD)&lt;/code&gt;를 도출합니다. ERD는 조직과 다양한 데이터베이스 사용자에게 어떠한 데이터가 중요한지 나타내기위해 사용됩니다.&lt;/p&gt;

&lt;p&gt;논리적 데이터 모델링은 비즈니스 정보의 논리적인 구조와 규칙을 명확하게 표현하는 과정으로, 데이터 모델링의 핵심이라고 할 수 있습니다. 이 단계에서는 업무에 대해 식별자, 속성, 관계 등을 명확히 표현하고, 데이터 정규화 작업을 합니다.&lt;/p&gt;

&lt;p&gt;물리적 데이터 모델링은 논리 데이터 모델이 데이터 컴퓨터 하드웨어에 어떻게 저장될 것인지를 다루는 과정입니다. 데이터가 물리적으로 컴퓨터에 어떻게 저장될 것인가에 대한 정의를 물리적 스키마라고 하며, 이 단계에서는 물리적 스키마를 설계합니다. 이는 실제로 데이터베이스를 구축할 때 참고되는 모델입니다.&lt;/p&gt;

&lt;h1 id=&quot;데이터-독립성이란&quot;&gt;데이터 독립성이란?&lt;/h1&gt;

&lt;p&gt;데이터 독립성은 하위 단계의 데이터 구조가 변경되더라도 상위 단계에 영향을 미치지 않는 속성을 의미합니다. 과거 파일방식으로 데이터를 구성할 때는 응용 프로그램과 데이터가 상호 밀접하게 연관되어 데이터의 종속성과 중복성이 발생했습니다. 다시 말해서 데이터가 변경되면 응용 프로그램이 수정되어야 했으며, 데이터의 중복으로 인해 데이터 일관성에 문제가 발생했습니다.&lt;/p&gt;

&lt;p&gt;이러한 배경으로 데이터베이스 간에 서로 독립성을 유지하기 위해 데이터 독립성 개념이 출현했으며, 미국 표준 협회(ANSI-SPARC)에서는 일반 사용자가 데이터베이스를 쉽게 이해하고 사용할 수 있도록 3단계 데이터베이스 구조를 제안했습니다.&lt;/p&gt;

&lt;h6 id=&quot;데이터베이스-3단계-구조&quot;&gt;데이터베이스 3단계 구조&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img003.png&quot; alt=&quot;img003&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;외부 단계는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;사용자 관점&lt;/code&gt;에서 데이터베이스를 이해하고 표현하는 단계로, 각각의 사용자나 응용 프로그래머가 접근하는 데이터베이스를 정의합니다.&lt;/p&gt;

&lt;p&gt;개념 단계는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;조직 전체의 관점&lt;/code&gt;에서 이해하고 표현하는 단계로, 데이터베이스에 저장되는 데이터 간의 관계를 기술합니다.&lt;/p&gt;

&lt;p&gt;외부 단계는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;저장 장치의 관점&lt;/code&gt;에서 데이터베이스를 이해하고 표현하는 단계로, 데이터가 물리적 장치에 실제로 저장되는 방법을 표현합니다.&lt;/p&gt;

&lt;h1 id=&quot;엔티티entity란&quot;&gt;엔티티(Entity)란?&lt;/h1&gt;

&lt;p&gt;엔티티(Entity)는 실체 또는 객체라는 뜻으로, 저장되고 관리되어야 할 데이터의 집합을 의미합니다. 데이터베이스의 권위자가 정의한 엔티티는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;변별할 수 있는 사물 - Peter Chen (1976) -&lt;/li&gt;
  &lt;li&gt;데이터베이스 내에서 변별 가능한 객체 - C.J Date (1986) -&lt;/li&gt;
  &lt;li&gt;정보를 저장할 수 있는 어떤 것 - James Martin (1989) -&lt;/li&gt;
  &lt;li&gt;정보가 저장될 수 있는 사람, 장소, 물건, 사건 그리고 개념 등 - Thomas Bruce (1992) -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;즉, 엔티티란 업무에 필요하고 유용한 정보를 저장하고 관리하기 위한 집합적인 것(Thing)으로 설명할 수 있습니다.&lt;/p&gt;

&lt;p&gt;엔티티는 다음과 같은 특징을 가집니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;반드시 해당 업무에서 필요하고 관리하고자 하는 정보이어야 합니다.&lt;/li&gt;
  &lt;li&gt;유일한 식별자에 의해 식별이 가능해야 합니다.&lt;/li&gt;
  &lt;li&gt;영속적으로 존재하는 두 개 이상의 인스턴스의 집합이어야 합니다.&lt;/li&gt;
  &lt;li&gt;업무 프로세스에 의해 이용되어야 합니다.&lt;/li&gt;
  &lt;li&gt;반드시 두 개 이상의 속성이 있어야 합니다. 단, 관계 엔티티의 경우 주 식별자만 있어도 엔티티로 인정됩니다.&lt;/li&gt;
  &lt;li&gt;다른 엔터티와 최소 한 개 이상의 관계가 있어야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;엔티티는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;실체의 유/무형&lt;/code&gt;에 따라 &lt;strong&gt;유형 엔티티(Tangible Entity)&lt;/strong&gt;, &lt;strong&gt;개념 엔티티(Conceptual Entity)&lt;/strong&gt;, &lt;strong&gt;사건 엔티티(Event Entity)&lt;/strong&gt;로 구분되고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;발생 시점&lt;/code&gt;에 따라 &lt;strong&gt;기본 엔티티(Fundamental Entity)&lt;/strong&gt;, &lt;strong&gt;중심 엔티티(Main Entity)&lt;/strong&gt;, &lt;strong&gt;행위 엔티티(Active Entity)&lt;/strong&gt;로 구분할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;유형 엔티티&lt;/code&gt;는 물리적인 형태가 있고 안정적/지속적으로 활용되는 엔티티로 사원, 물품, 강사 등이 이에 해당합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;개념 엔티티&lt;/code&gt;는 물리적 형태가 존재하지 않고 관리해야 할 개념적 정보로 구분이 되는 엔티티로 조직, 보험상품 등이 이에 해당합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;사건 엔티티&lt;/code&gt;는 업무를 수행함에 따라 발생되는 엔티티로 주문, 청구, 미납 등이 이에 해당합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;기본 엔티티&lt;/code&gt;는 그 업무에 원래 존재하는 정보로서 다른 엔터티와 관계에 의해 생성되지 않고 독립적으로 생성이 가능하고 자신은 타 엔터티의 부모의 역할을 합니다. 사원, 부서, 고객, 상품, 자재 등이 기본 엔티티가 될 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;중심 엔티티&lt;/code&gt;는 기본엔터티로부터 발생되고 그 업무에 있어서 중심적인 역할을 합니다. 데이터의 양이 많이 발생되고 다른 엔터티와의 관계를 통해 많은 행위엔터티를 생성하며, 계약, 사고, 예금원장, 청구, 주문, 매출 등이 중심 엔티티가 될 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;행위 엔티티&lt;/code&gt;는 두 개 이상의 부모엔터티로부터 발생되며, 분석초기 단계에서는 잘 나타나지 않고 상세 설계단계나 프로세스와 상관모델링을 진행하면서 도출될 수 있습니다. 주문목록, 사원변경이력 등이 행위 엔티티가 될 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;속성attribute이란&quot;&gt;속성(Attribute)이란?&lt;/h1&gt;

&lt;p&gt;속성은 사물의 본질적인 성질로서, 사물이나 개념이 어떤 것인지를 나타내고 그것을 구별하는 성질이라고 할 수 있습니다. 데이터 모델링 관점에서는 업무에서 필요로 하는 인스턴스로 관리하고자 하는 의미상 더 이상 분리되지 않는 최소의 데이터 단위로 속성을 정의할 수 있습니다.&lt;/p&gt;

&lt;p&gt;속성은 업무에서 필요하고 관리하고자 하는 정보로 함수적 종속성을 가지며 하나의 속성은 하나의 값만 가질 수 있으며, 속성이 가질 수 있는 값의 범위를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;도메인(Domain)&lt;/code&gt;이라고 합니다.&lt;/p&gt;

&lt;p&gt;속성은 특성에 따라 업무로 부터 추출한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;기본 속성&lt;/code&gt;, 데이터 모델링이나 업무를 규칙화하기 위해 새로 만들거나 변형하여 정의하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;설계 속성&lt;/code&gt;, 다른 속성에 영향을 받아 발생하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;파생 속성&lt;/code&gt;으로 구분할 수 있고, 엔티티 구성방식에 따라 인스턴스를 식별할 수 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;기본키(Primary Key, PK) 속성&lt;/code&gt;, 다른 엔티티와 관계에서 포함되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;외래키(Foreign Key, FK) 속성&lt;/code&gt;, 나머지 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;일반 속성&lt;/code&gt;으로 구분할 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;관계relationship란&quot;&gt;관계(Relationship)란?&lt;/h1&gt;

&lt;p&gt;데이터 모델링에서 관계는 개체와 개체 간의 의미 있는 연관성을 뜻하며, 개체 집합들 사이의 대응관계를 말합니다.&lt;/p&gt;

&lt;p&gt;관계는 존재에 의한 관계와 행위에 의한 관계로 구분될 수 있으며, 두 엔티티 간의 관계에서 참여자의 수에 따라 1:1, 1:m, m:n 관계차수를 나타낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;예를 들어 하나의 회원은 하나의 회원정보를 가지므로, 1:1 관계를 가집니다.&lt;/p&gt;

&lt;h6 id=&quot;11-연관관계&quot;&gt;1:1 연관관계&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img004.png&quot; alt=&quot;img004&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하나의 회원은 다수의 게시글을 작성할 수 있으므로, 1:m 관계를 가집니다.&lt;/p&gt;

&lt;h6 id=&quot;1m-연관관계&quot;&gt;1:m 연관관계&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img005.png&quot; alt=&quot;img005&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하나의 영화에는 다수의 배우가 출연할 수 있고, 하나의 배우는 다수의 영화에 출연할 수 있으므로 m:n 관계를 가집니다.&lt;/p&gt;

&lt;h6 id=&quot;mn-연관관계&quot;&gt;m:n 연관관계&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sql/img006.png&quot; alt=&quot;img006&quot; style=&quot;margin-top:-1.5em&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>huimang2</name>
        
        
      </author>

      

      
        <category term="sql" />
      

      
        <summary type="html">모델링(Modeling)이란?</summary>
      

      
      
    </entry>
  
</feed>
